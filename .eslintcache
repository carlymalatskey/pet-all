[{"/Users/carlymalatskey/Desktop/Code/pet-all/src/index.js":"1","/Users/carlymalatskey/Desktop/Code/pet-all/src/App.js":"2","/Users/carlymalatskey/Desktop/Code/pet-all/src/reportWebVitals.js":"3","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/HomePage.js":"4","/Users/carlymalatskey/Desktop/Code/pet-all/src/api.js":"5","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/PetDetails/PetDetailsPage.js":"6","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/MyPetsPage/MyPetsPage.js":"7","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/AppNavigation/AppNavigation.js":"8","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/ProfileSettings/ProfileSettingsPage.js":"9","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/LoggedInHome/LoggedInHome.js":"10","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/SearchPage/SearchPage.js":"11","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/NotLoggedInHome/NotLoggedInHome.js":"12","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Admin/AddPetForm.js":"13","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Admin/Dashboard/Dashboard.js":"14","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Admin/EditPetForm/EditPetForm.js":"15","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/PetDetails/PetDetailsText.js":"16","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/NotLoggedInHome/modals/SignUpModal/SignUpModal.js":"17","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/NotLoggedInHome/modals/LoginModal/LoginModal.js":"18","/Users/carlymalatskey/Desktop/Code/pet-all/src/consts.js":"19","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Admin/Dashboard/UserCard.js":"20","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/SearchPage/BasicSearch.js":"21","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/MyPetsPage/OwnedPets/OwnedPets.js":"22","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/SearchPage/AdvancedSearch.js":"23","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/MyPetsPage/SavedPets/SavedPets.js":"24","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/shared/PetCard.js":"25"},{"size":500,"mtime":1610056605526,"results":"26","hashOfConfig":"27"},{"size":214,"mtime":1610056605337,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1610056605527,"results":"29","hashOfConfig":"27"},{"size":5721,"mtime":1610110323180,"results":"30","hashOfConfig":"27"},{"size":2308,"mtime":1610110430210,"results":"31","hashOfConfig":"27"},{"size":6672,"mtime":1610105533650,"results":"32","hashOfConfig":"27"},{"size":2527,"mtime":1610056605514,"results":"33","hashOfConfig":"27"},{"size":3548,"mtime":1610110162561,"results":"34","hashOfConfig":"27"},{"size":4610,"mtime":1610109479515,"results":"35","hashOfConfig":"27"},{"size":791,"mtime":1610056605505,"results":"36","hashOfConfig":"27"},{"size":2354,"mtime":1610108741328,"results":"37","hashOfConfig":"27"},{"size":2227,"mtime":1610110333159,"results":"38","hashOfConfig":"27"},{"size":9405,"mtime":1610108711440,"results":"39","hashOfConfig":"27"},{"size":870,"mtime":1610056605495,"results":"40","hashOfConfig":"27"},{"size":9389,"mtime":1610108156760,"results":"41","hashOfConfig":"27"},{"size":2924,"mtime":1610056605519,"results":"42","hashOfConfig":"27"},{"size":4311,"mtime":1610056605511,"results":"43","hashOfConfig":"27"},{"size":2179,"mtime":1610056605509,"results":"44","hashOfConfig":"27"},{"size":927,"mtime":1610106365504,"results":"45","hashOfConfig":"27"},{"size":2182,"mtime":1610110140978,"results":"46","hashOfConfig":"27"},{"size":1932,"mtime":1610109428037,"results":"47","hashOfConfig":"27"},{"size":1965,"mtime":1610056605516,"results":"48","hashOfConfig":"27"},{"size":5332,"mtime":1610108928735,"results":"49","hashOfConfig":"27"},{"size":1900,"mtime":1610056605516,"results":"50","hashOfConfig":"27"},{"size":2468,"mtime":1610056605524,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"zatzge",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/carlymalatskey/Desktop/Code/pet-all/src/index.js",[],["110","111"],"/Users/carlymalatskey/Desktop/Code/pet-all/src/App.js",[],"/Users/carlymalatskey/Desktop/Code/pet-all/src/reportWebVitals.js",[],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/HomePage.js",["112"],"/Users/carlymalatskey/Desktop/Code/pet-all/src/api.js",[],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/PetDetails/PetDetailsPage.js",["113","114","115","116","117","118","119"],"import React from \"react\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./PetDetailsPage.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircle, faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from \"react-router-dom\";\nimport api from \"./../../api\";\nimport { alignPropType } from \"react-bootstrap/esm/DropdownMenu\";\nimport PetDetailsText from \"./PetDetailsText.js\";\n\nclass PetDetailsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pet: undefined,\n            isLoading: false,\n            savedPets: []\n        }\n    }\n\n    async componentDidMount() {\n        let petId = this.props.match.params.id;\n        this.setState({\n            isLoading: !this.state.isLoading,\n        });\n        let response = await api.pet.getPetById(petId);\n        this.setState({\n            pet: response.data.currentPet,\n            isLoading: !this.state.isLoading\n        })\n    }\n\n    async handleAdopt() {\n        let petId = this.props.match.params.id;\n        let response = await api.pet.adopt(petId);\n        if (response.data.status == \"success\") {\n            alert(`CONGRATS! ${this.state.pet.name} has been adopted!`);\n            window.location.reload();\n        } else {\n            alert(`Error: ${response.data.message}`);\n        }\n    }\n\n    async handleFoster() {\n        let petId = this.props.match.params.id; \n        let response = await api.pet.foster(petId);\n        if (response.data.status == \"success\") {\n            alert(`CONGRATS! ${this.state.pet.name} has been fostered!`);\n            window.location.reload();\n        } else {\n            alert(`Error occurred: ${response.data.message}`);\n        }\n    }\n\n    async handleSave() {\n        let petId = this.props.match.params.id; \n        let response = await api.pet.save(petId);\n        if (response.data.status == \"success\") {\n            alert(`${this.state.pet.name} has been added to your favorites!`);\n            window.location.reload();\n        } else {\n            alert(`Error: ${response.data.message}`);\n        }\n    }\n\n    async handleRemovedSavedPet() {\n        let petId = this.props.match.params.id; \n        let response = await api.pet.removedSavedPet(petId);\n        if (response.data.status == \"success\") {\n            alert(`${this.state.pet.name} has been removed from your favorites.`);\n            window.location.reload();\n        } else {\n            alert(`Error: ${response.data.message}`);\n        }\n    }\n\n    async handleReturn() {\n        let petId = this.props.match.params.id; \n        let response = await api.pet.return(petId);\n        if (response.data.status == \"success\") {\n            alert(`${this.state.pet.name} has been returned.`);\n            window.location.reload();\n        } else {\n            alert(`Error occurred: ${response.data.message}`);\n        }\n    }\n\n    isPetSaved() {\n        let petId = this.props.match.params.id; \n        return this.props.user.savedPets.includes(petId);\n    }\n\n    isUserOwningPet() {\n        let petId = this.props.match.params.id; \n        return this.props.user.fosteredPets.includes(petId) || this.props.user.adoptedPets.includes(petId); \n    }\n    render() {\n        return (\n            <div>\n                {this.state.pet && this.props.user &&\n                    <div>\n                        <div>\n                            <Image className=\"pet-image-heading\" src={this.state.pet.picture}></Image>\n                        </div>\n                        <div className=\"under-picture-section\">\n                            <PetDetailsText pet={this.state.pet}></PetDetailsText>\n                            <div>\n                            \n                                <div>\n                                    {this.props.user.isAdmin ? \n                                        <Link pet={this.state.pet} to={`/editPet/${this.state.pet.id}`} className=\"action-button-style edit-pet\">Edit Pet Information</Link> : <div></div>}\n                                </div>\n                                <div className=\"action-buttons-section\">\n                                    <div className=\"action-buttons\">\n                                        {this.isPetSaved() ? \n\n                                            <Button variant=\"primary\" type=\"submit\" className=\"action-button-style\" onClick={() => this.handleRemovedSavedPet()}><FontAwesomeIcon className=\"heart-icon\" icon={faHeart}/> Unfavorite Me :(</Button>\n                                        :\n                                            <Button variant=\"primary\" type=\"submit\" className=\"action-button-style\" onClick={() => this.handleSave()}><FontAwesomeIcon className=\"heart-icon\" icon={faHeart}/> Favorite Me!</Button>\n                                        }\n                                    {this.isUserOwningPet() ?\n                                        <div>\n                                            <Button variant=\"primary\" type=\"submit\" className=\"action-button-style\" onClick={() => this.handleReturn()}>Return Me</Button>\n                                        </div>\n                                        :\n                                        <div>\n                                            {this.state.pet.adoptionStatus.toLowerCase() === \"available\" ?  \n                                                <div>\n                                                    <Button variant=\"primary\" type=\"submit\" className=\"action-button-style\" onClick={() => this.handleFoster()}>Foster Me</Button>\n                                                    <Button variant=\"primary\" type=\"submit\" className=\"action-button-style\" onClick={() => this.handleAdopt()}>Adopt Me</Button>\n                                                </div>\n                                            : \n                                                <div className=\"label-not-available\">\n                                                    This pet is not available for adoption or fostering. \n                                                    <Link className=\"label-not-available\" to=\"/search\"> Find more pets</Link>\n                                                </div>\n                                            }\n                                        </div>\n                                    }\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default PetDetailsPage; ","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/MyPetsPage/MyPetsPage.js",["120","121"],"import React from \"react\";\nimport \"./../MyPetsPage/MyPetsPage.css\";\nimport SavedPets from \"./SavedPets/SavedPets\";\nimport OwnedPets from \"./OwnedPets/OwnedPets\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport api from \"./../../api\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ToggleButton from 'react-bootstrap/ToggleButton'\n\nclass MyPetsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ownedPets: {\n                fosteredPets: [],\n                adoptedPets: []\n            },\n            savedPets: [],\n            showSaved: true,\n            finishedLoadingInfo: false,\n            context: \"favorites\"\n        }\n    }\n\n    async componentDidMount() {\n        let userId = this.props.user.id; \n        let response = await api.user.getPets(userId);\n        this.setState({\n            ownedPets: {\n                fosteredPets: response.data.fosteredPets,\n                adoptedPets: response.data.adoptedPets\n            },\n            savedPets: response.data.savedPets,\n            finishedLoadingInfo: true\n        })\n    }\n\n    handleContextChange = (e) => {\n        let newContext = e.target.value;\n        this.setState({\n            context: newContext\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.finishedLoadingInfo && \n                    <div>\n                        <Button\n                            type=\"submit\"\n                            onClick={(e) => this.setState({context: \"favorites\"})}\n                            className={this.state.context === \"favorites\" ? \"selected-btn\" : \"unselected-buttons\"}\n                        >Favorite Pets</Button>\n                        <Button\n                            type=\"submit\"\n                            onClick={(e) => this.setState({context: \"ownedpets\"})} \n                            className={this.state.context !== \"favorites\" ? \"selected-btn\" : \"unselected-buttons\"}\n                        >Owned Pets</Button>\n                        {this.state.context === 'favorites' ? \n                            <SavedPets savedPets={this.state.savedPets} user={this.props.user}/>\n                            :\n                            <OwnedPets fosteredPets={this.state.ownedPets.fosteredPets} adoptedPets={this.state.ownedPets.adoptedPets} user={this.props.user}/>\n                        }\n                    </div>\n                }\n        </div>\n        )\n    }\n}\n\nexport default MyPetsPage; ","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/AppNavigation/AppNavigation.js",[],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/ProfileSettings/ProfileSettingsPage.js",[],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/LoggedInHome/LoggedInHome.js",["122"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass LoggedInHome extends React.Component {\n    constructor(props) { \n        super(props);\n    }\n\n    render() {\n        return(\n            <div>\n                <h2 className=\"homepage-header\">{`Welcome to PetAdopt ${this.props.user.displayName}!`}</h2>\n                <div>              \n                    <h4 className=\"homepage-about-text\">At PetAdopt, we provide incredible homes for our furry friends,\n                        who are just looking for a loving and warm environment where\n                        they feel safe and secure.\n                    </h4>\n                </div>\n                <Link to=\"/mypets\"> View My Pets</Link>\n            </div>\n        );\n    }\n}\n\nexport default LoggedInHome;","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/SearchPage/SearchPage.js",["123"],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/NotLoggedInHome/NotLoggedInHome.js",["124"],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Admin/AddPetForm.js",["125","126","127"],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Admin/Dashboard/Dashboard.js",[],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Admin/EditPetForm/EditPetForm.js",["128","129","130"],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/PetDetails/PetDetailsText.js",["131"],"import React from \"react\"; \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\nimport \"./PetDetailsText.css\";\n\nclass PetDetailsText extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <div className=\"about-pet-section\">\n                <h2 className=\"pet-name-heading\">{this.props.pet.name}</h2>\n                <div className =\"pet-subsection-details\">{this.props.pet.adoptionStatus} <FontAwesomeIcon className=\"pet-card-dot\" icon={faCircle}/> {this.props.pet.type} <FontAwesomeIcon className=\"pet-card-dot\" icon={faCircle}/> {this.props.pet.breed}</div>\n                <div className=\"about-me-section\">\n                    <h2>About Me</h2>\n                    <div> \n                        <h4 className=\"about-subheadings\">Size</h4>\n                        <p className=\"about-subheadings-answers\"> I weigh {this.props.pet.weight} pounds and I am {this.props.pet.height} inches tall!</p>\n                    </div>\n                    {this.props.pet.isHypoallergenic ? \n                        <div> \n                            <h4 className=\"about-subheadings diet-rest\">Hypoallergenic: </h4>\n                            <p className=\"about-subheadings-answers diet-rest\"> Yes </p>\n                        </div>\n                        :\n                        <div> \n                            <h4 className=\"about-subheadings diet-rest\">Hypoallergenic: </h4>\n                            <p className=\"about-subheadings-answers diet-rest\"> No </p>\n                        </div>\n                    }\n                \n                    <div> \n                        <h4 className=\"about-subheadings color\">Color:</h4>\n                        <p className=\"about-subheadings-answers color\"> {this.props.pet.color}</p>\n                    </div>\n                    {this.props.pet.dietRest.length > 0 ?\n                        <div> \n                            <h4 className=\"about-subheadings diet-rest\">Dietary Restrictions: </h4>\n                            <p className=\"about-subheadings-answers diet-rest\"> {this.props.pet.dietRest}</p>\n                        </div>\n                        :\n                        <div> \n                            <h4 className=\"about-subheadings diet-rest\">Dietary Restrictions: </h4>\n                            <p className=\"about-subheadings-answers diet-rest\"> None </p>\n                        </div>\n                    }\n                </div>\n                <div className=\"meet-me-section\">\n                    <h2>Meet Me</h2>\n                    <div className=\"meet-me-section-criteria\"> \n                        <p className=\"meet-me-subheadings-answers\"> {this.props.pet.bio}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PetDetailsText;","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/NotLoggedInHome/modals/SignUpModal/SignUpModal.js",[],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/NotLoggedInHome/modals/LoginModal/LoginModal.js",["132"],"import React from \"react\";\nimport Modal from \"react-modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./../Modal.css\";\nimport api from \"../../../../../api\";\n\nclass LoginModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        email: '',\n        password: ''\n    }\n  }\n\n  componentDidMount() {\n    Modal.setAppElement('body'); \n  }\n\n\n  onInputChange(event, type) {\n      switch(type) {\n        case \"email\":\n          this.setState({\n            email: event.target.value\n          }\n        )\n        break;\n        case \"password\":\n          this.setState({\n              password: event.target.value\n            }\n          )\n          break;\n      }\n  }\n\n  async handleLogin(event) {\n    event.preventDefault();\n    let response = await api.authentication.login(this.state.email, this.state.password);\n    if (response.data.status === \"success\") {\n      this.props.handleLoggedIn(); \n    } else {\n      alert(\"bad credentials, try again\");\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Modal isOpen={this.props.showModal} portalClassName=\"modal\">\n          <Form>\n            <Form.Label>Sign In</Form.Label>\n            <Form.Group>\n              <Form.Control type=\"email\" \n                            placeholder=\"Enter Email\" \n                            className=\"entry-info-section\"\n                            onChange={(event) => this.onInputChange(event, \"email\")}\n                            value={this.state.email}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"password\" \n                            placeholder=\"Enter Password\" \n                            className=\"entry-info-section\"\n                            onChange={(event) => this.onInputChange(event, \"password\")}\n                            value={this.state.password}/>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" className=\"entry-button\" onClick={(event) => this.handleLogin(event)}>\n              Login\n            </Button>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default LoginModal;\n","/Users/carlymalatskey/Desktop/Code/pet-all/src/consts.js",["133"],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Admin/Dashboard/UserCard.js",["134","135"],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/SearchPage/BasicSearch.js",["136","137"],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/MyPetsPage/OwnedPets/OwnedPets.js",["138"],"import React from \"react\";\nimport PetCard from \"./../../shared/PetCard\";\nimport { Link } from \"react-router-dom\";\nimport api from \"./../../../api\";\n\nclass OwnedPets extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ownedPets: [],\n            finishedLoadingInfo: false\n        }\n    }\n\n    async componentDidMount() {\n        let allPetsToFetch = [].concat(this.props.adoptedPets).concat(this.props.fosteredPets);\n        let promises = Promise.all(allPetsToFetch.map(petId => api.pet.getPetById(petId)));\n        promises.then(results => Promise.all(results.map(response => response.data.currentPet))).then(results => {\n            this.setState({\n                ownedPets: results,\n                finishedLoadingInfo: true\n        })})\n    }\n\n    render() {\n        return(\n            <div>\n                {!this.state.finishedLoadingInfo ? \n                    <div>WAIT! LOADING!</div>\n                    :\n                    <div>\n                        {this.state.ownedPets.length == 0 ?\n                            <div>\n                                <div>\n                                    <h1>No owned pets yet</h1>\n                                    <p>When you find a pet you love, own it!</p>\n                                </div>\n                                <div>\n                                    <Link className=\"find-a-pet-label\" to=\"/search\">Find a Pet</Link> \n                                </div>\n                            </div>\n                            :\n                            <div>\n                                {this.state.ownedPets.map(ownedPet => {\n                                    return <PetCard pet={ownedPet} user={this.props.user}/>\n                                })}\n                            </div>\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default OwnedPets;\n","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/SearchPage/AdvancedSearch.js",[],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/MyPetsPage/SavedPets/SavedPets.js",["139"],"import React from \"react\";\nimport PetCard from \"./../../shared/PetCard\";\nimport api from \"./../../../api\";\nimport { Link } from \"react-router-dom\";\n\nclass SavedPets extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            savedPets: [],\n            finishedLoadingInfo: false\n        }\n    }\n\n    async componentDidMount() {\n        let promises = Promise.all(this.props.savedPets.map(petId => api.pet.getPetById(petId)));\n        promises.then(results => Promise.all(results.map(response => response.data.currentPet))).then(results => {\n            this.setState({\n                savedPets: results,\n                finishedLoadingInfo: true\n        })})\n    }\n\n    render() {\n        return(\n            <div>\n                {!this.state.finishedLoadingInfo ? \n                    <div>WAIT! LOADING!</div>\n                    :\n                    <div>\n                        {this.state.savedPets.length == 0 ?\n                            <div>\n                                <div>\n                                    <h1>No favorites here yet</h1>\n                                    <p>When you find a pet you love, add it to you favorites list</p>\n                                </div>\n                                <div>\n                                    <Link className=\"find-a-pet-label\" to=\"/search\">Find a Pet</Link> \n                                </div>\n                            </div>\n                            :\n                            <div>\n                                {this.state.savedPets.map(savedPet => {\n                                    return <PetCard pet={savedPet} user={this.props.user}/>\n                                })}\n                            </div>\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default SavedPets;\n","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/shared/PetCard.js",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"148","line":6,"column":10,"nodeType":"146","messageId":"147","endLine":6,"endColumn":18},{"ruleId":"144","severity":1,"message":"149","line":9,"column":10,"nodeType":"146","messageId":"147","endLine":9,"endColumn":23},{"ruleId":"150","severity":1,"message":"151","line":37,"column":34,"nodeType":"152","messageId":"153","endLine":37,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":48,"column":34,"nodeType":"152","messageId":"153","endLine":48,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":59,"column":34,"nodeType":"152","messageId":"153","endLine":59,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":70,"column":34,"nodeType":"152","messageId":"153","endLine":70,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":81,"column":34,"nodeType":"152","messageId":"153","endLine":81,"endColumn":36},{"ruleId":"144","severity":1,"message":"154","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":19},{"ruleId":"144","severity":1,"message":"155","line":8,"column":8,"nodeType":"146","messageId":"147","endLine":8,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":5,"column":5,"nodeType":"158","messageId":"159","endLine":7,"endColumn":6},{"ruleId":"144","severity":1,"message":"160","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"144","severity":1,"message":"161","line":5,"column":10,"nodeType":"146","messageId":"147","endLine":5,"endColumn":14},{"ruleId":"162","severity":1,"message":"163","line":20,"column":15,"nodeType":"164","messageId":"153","endLine":20,"endColumn":20},{"ruleId":"165","severity":1,"message":"166","line":87,"column":13,"nodeType":"167","messageId":"153","endLine":94,"endColumn":21},{"ruleId":"150","severity":1,"message":"151","line":99,"column":60,"nodeType":"152","messageId":"153","endLine":99,"endColumn":62},{"ruleId":"168","severity":1,"message":"169","line":26,"column":9,"nodeType":"170","messageId":"171","endLine":107,"endColumn":10},{"ruleId":"150","severity":1,"message":"151","line":95,"column":62,"nodeType":"152","messageId":"153","endLine":95,"endColumn":64},{"ruleId":"172","severity":1,"message":"173","line":218,"column":17,"nodeType":"174","endLine":218,"endColumn":82},{"ruleId":"156","severity":1,"message":"157","line":7,"column":5,"nodeType":"158","messageId":"159","endLine":9,"endColumn":6},{"ruleId":"168","severity":1,"message":"169","line":23,"column":7,"nodeType":"170","messageId":"171","endLine":36,"endColumn":8},{"ruleId":"144","severity":1,"message":"175","line":1,"column":9,"nodeType":"146","messageId":"147","endLine":1,"endColumn":21},{"ruleId":"144","severity":1,"message":"176","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":16},{"ruleId":"144","severity":1,"message":"160","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":30,"column":98,"nodeType":"152","messageId":"153","endLine":30,"endColumn":100},{"ruleId":"150","severity":1,"message":"151","line":34,"column":98,"nodeType":"152","messageId":"153","endLine":34,"endColumn":100},{"ruleId":"150","severity":1,"message":"151","line":32,"column":54,"nodeType":"152","messageId":"153","endLine":32,"endColumn":56},{"ruleId":"150","severity":1,"message":"151","line":31,"column":54,"nodeType":"152","messageId":"153","endLine":31,"endColumn":56},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'faCircle' is defined but never used.","'alignPropType' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ButtonGroup' is defined but never used.","'ToggleButton' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Button' is defined but never used.","'Link' is defined but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","no-duplicate-case","Duplicate case label.","SwitchCase","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'faMarsDouble' is assigned a value but never used.","'Collapse' is defined but never used.","no-global-assign","no-unsafe-negation"]