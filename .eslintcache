[{"/Users/carlymalatskey/Desktop/Code/pet-all/src/index.js":"1","/Users/carlymalatskey/Desktop/Code/pet-all/src/App.js":"2","/Users/carlymalatskey/Desktop/Code/pet-all/src/reportWebVitals.js":"3","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/HomePage.js":"4","/Users/carlymalatskey/Desktop/Code/pet-all/src/api.js":"5","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/PetDetails/PetDetailsPage.js":"6","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/MyPetsPage/MyPetsPage.js":"7","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/AppNavigation/AppNavigation.js":"8","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/ProfileSettings/ProfileSettingsPage.js":"9","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/LoggedInHome/LoggedInHome.js":"10","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/SearchPage/SearchPage.js":"11","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/NotLoggedInHome/NotLoggedInHome.js":"12","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Admin/AddPetForm.js":"13","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Admin/Dashboard/Dashboard.js":"14","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Admin/EditPetForm/EditPetForm.js":"15","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/PetDetails/PetDetailsText.js":"16","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/NotLoggedInHome/modals/SignUpModal/SignUpModal.js":"17","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/NotLoggedInHome/modals/LoginModal/LoginModal.js":"18","/Users/carlymalatskey/Desktop/Code/pet-all/src/consts.js":"19","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Admin/Dashboard/UserCard.js":"20","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/SearchPage/BasicSearch.js":"21","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/MyPetsPage/OwnedPets/OwnedPets.js":"22","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/SearchPage/AdvancedSearch.js":"23","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/MyPetsPage/SavedPets/SavedPets.js":"24","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/shared/PetCard.js":"25"},{"size":500,"mtime":1610056605526,"results":"26","hashOfConfig":"27"},{"size":214,"mtime":1610056605337,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1610056605527,"results":"29","hashOfConfig":"27"},{"size":5721,"mtime":1610142363808,"results":"30","hashOfConfig":"27"},{"size":2328,"mtime":1610145978329,"results":"31","hashOfConfig":"27"},{"size":6550,"mtime":1610144880886,"results":"32","hashOfConfig":"27"},{"size":2527,"mtime":1610144844700,"results":"33","hashOfConfig":"27"},{"size":3870,"mtime":1610144575826,"results":"34","hashOfConfig":"27"},{"size":4610,"mtime":1610109479515,"results":"35","hashOfConfig":"27"},{"size":909,"mtime":1610144302473,"results":"36","hashOfConfig":"27"},{"size":2324,"mtime":1610145023052,"results":"37","hashOfConfig":"27"},{"size":2227,"mtime":1610110333159,"results":"38","hashOfConfig":"27"},{"size":9430,"mtime":1610147311455,"results":"39","hashOfConfig":"27"},{"size":870,"mtime":1610056605495,"results":"40","hashOfConfig":"27"},{"size":9565,"mtime":1610147272536,"results":"41","hashOfConfig":"27"},{"size":2924,"mtime":1610056605519,"results":"42","hashOfConfig":"27"},{"size":4311,"mtime":1610143042833,"results":"43","hashOfConfig":"27"},{"size":2179,"mtime":1610056605509,"results":"44","hashOfConfig":"27"},{"size":843,"mtime":1610146149339,"results":"45","hashOfConfig":"27"},{"size":2182,"mtime":1610144722414,"results":"46","hashOfConfig":"27"},{"size":1932,"mtime":1610109428037,"results":"47","hashOfConfig":"27"},{"size":1965,"mtime":1610056605516,"results":"48","hashOfConfig":"27"},{"size":5332,"mtime":1610108928735,"results":"49","hashOfConfig":"27"},{"size":1900,"mtime":1610056605516,"results":"50","hashOfConfig":"27"},{"size":2913,"mtime":1610144945500,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"zatzge",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/carlymalatskey/Desktop/Code/pet-all/src/index.js",[],["114","115"],"/Users/carlymalatskey/Desktop/Code/pet-all/src/App.js",[],"/Users/carlymalatskey/Desktop/Code/pet-all/src/reportWebVitals.js",[],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/HomePage.js",["116"],"import React, { Component } from \"react\";\nimport \"./HomePage.css\";\nimport PetDetailsPage from \"./../../components/PetDetails/PetDetailsPage\";\nimport MyPetsPage from \"./../MyPetsPage/MyPetsPage\";\nimport AppNavigation from \"../AppNavigation/AppNavigation\";\nimport ProfileSettingsPage from \"./../../components/ProfileSettings/ProfileSettingsPage\";\nimport SearchPage from \"./../../components/SearchPage/SearchPage\";\nimport {} from \"react-router-dom\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport NotLoggedInHome from \"./NotLoggedInHome/NotLoggedInHome\";\nimport LoggedInHome from \"./LoggedInHome/LoggedInHome\";\nimport Cookies from \"universal-cookie\";\nimport api from \"../../api\";\nimport AddPetForm from \"./../Admin/AddPetForm\";\nimport EditPetForm from \"./../Admin/EditPetForm/EditPetForm\"\nimport Dashboard from \"../Admin/Dashboard/Dashboard\";\n\nconst cookies = new Cookies();\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      isSignedIn: false,\n      user: undefined\n    };\n  }\n\n  async componentDidMount() {\n    let userId = cookies.get('petAdoptionUserId');\n    let user = await api.user.getUserDetails(userId);\n    if (userId) {\n      this.setState({\n        isSignedIn: true,\n        user: user.data.user\n      })\n    }\n  }\n\n  handleUpdateUserProfile = async (updatedUser) => {\n    try {\n      let response = await api.user.updateUser(updatedUser); \n      if (response.data.status === \"success\") {\n        alert(\"Successfully updated profile\");\n        this.setState({\n          user: response.data.updatedUser,\n          isSignedIn: true\n        }); \n    } else {\n      alert(\"Unable to update profile\");\n    }\n  } catch (error) {\n    alert(\"Error in updating profile: \" + error);\n  }\n}\n\n  handleSignUp = async (newUser) => {\n    try{\n      let response = await api.authentication.signUp(newUser);\n      if (response.data.status === \"success\") {\n        alert(\"Successfully signed up\");\n        this.setState({\n          user: response.data.user,\n          isSignedIn: true\n        }); \n      } else {\n        alert(response.data.error.message);\n      }\n    } catch (error) {\n      alert(\"Error in signing up: \" + error);\n    } \n  }\n\n  handleLoggedIn = async () => {\n    let userId = cookies.get('petAdoptionUserId');\n    if (userId) {\n      let user = await api.user.getUserDetails(userId);\n      this.setState({\n        user: user.data.user,\n        isSignedIn: true\n      })\n    }\n  }\n\n  handleSignOut = async () => {\n    try {\n      let response = await api.authentication.signOut(); \n      if (response.data.status === \"success\") {\n        alert(\"Successfully signed out\");\n        this.setState({\n          user: undefined,\n          isSignedIn: false\n        });\n      } else {\n        alert(\"Unable to sign out\");\n      }\n    } catch (error) {\n      alert(\"Error in signing out: \" + error)\n    }\n  }\n\n  handleAddPet = async (newPet, picture) => {\n    try {\n      let data = new FormData()\n      data.append('file', picture);\n      Object.keys(newPet).forEach(key => {\n        data.append(key, newPet[key]);\n      })\n      let response = await api.admin.addPet(data);\n      if (response.data.status === \"success\") {\n        alert(\"Successfully added a pet\");\n        this.setState({\n          pet: response.data.pet,\n        }); \n      } else {\n        alert(\"Unable to add pet\");\n      }\n    } catch (error) {\n      alert(\"Error in adding a pet: \" + error);\n    } \n  }\n\n  handleUpdatedPet = async (updatedPet) => {\n    try {\n      let response = await api.pet.updatePet(updatedPet); \n      if (response.data.status === \"success\") {\n        alert(\"Successfully updated profile\");\n        this.setState({\n          pet: response.data.updatedPet,\n          isSignedIn: true\n        }); \n      } else {\n        alert(\"Unable to update profile\");\n      }\n    } catch (error) {\n      alert(\"Error in updating profile: \" + error);\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <AppNavigation isSignedIn={this.state.isSignedIn} user={this.state.user} signOut={() => this.handleSignOut()}/>\n        <div className=\"website-section\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/home\" />\n            </Route>\n            <Route exact path=\"/home\" render={props => this.state.isSignedIn ? <LoggedInHome {...props} user={this.state.user}/> : <NotLoggedInHome {...props} signedUp={(newUser) => this.handleSignUp(newUser)} loggedIn={() => this.handleLoggedIn()}/>}/>\n            <Route path=\"/search\">\n              <SearchPage user={this.state.user} />\n            </Route>\n            <Route path=\"/profile-settings\">\n              <ProfileSettingsPage user={this.state.user} handleUpdateUserProfile={this.handleUpdateUserProfile}></ProfileSettingsPage>\n            </Route>\n            <Route path=\"/mypets\" render={props => this.state.isSignedIn ? <MyPetsPage {...props} user={this.state.user}/> : <NotLoggedInHome {...props} signedUp={(newUser) => this.handleSignUp(newUser)} loggedIn={() => this.handleLoggedIn()}/>}/>\n            <Route path=\"/petpage/:id\" render={(props) => <PetDetailsPage {...props} user={this.state.user} editPet={() => this.handleEditPet()}/>}/>\n            <Route path=\"/add-pet\">\n              <AddPetForm user={this.state.user} handleAddPet={(newPet, picture) => this.handleAddPet(newPet, picture)}/>\n            </Route>\n            <Route path=\"/dashboard\">\n              <Dashboard user={this.state.user} />\n            </Route>\n            <Route path=\"/editPet/:id\" render={(props) => <EditPetForm {...props}/>}>\n            </Route>\n          </Switch> \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default HomePage;\n","/Users/carlymalatskey/Desktop/Code/pet-all/src/api.js",[],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/PetDetails/PetDetailsPage.js",["117","118","119","120","121"],"import React from \"react\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./PetDetailsPage.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from \"react-router-dom\";\nimport api from \"./../../api\";\nimport PetDetailsText from \"./PetDetailsText.js\";\n\nclass PetDetailsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pet: undefined,\n            isLoading: false,\n            savedPets: []\n        }\n    }\n\n    async componentDidMount() {\n        let petId = this.props.match.params.id;\n        this.setState({\n            isLoading: !this.state.isLoading,\n        });\n        let response = await api.pet.getPetById(petId);\n        this.setState({\n            pet: response.data.currentPet,\n            isLoading: !this.state.isLoading\n        })\n    }\n\n    async handleAdopt() {\n        let petId = this.props.match.params.id;\n        let response = await api.pet.adopt(petId);\n        if (response.data.status == \"success\") {\n            alert(`CONGRATS! ${this.state.pet.name} has been adopted!`);\n            window.location.reload();\n        } else {\n            alert(`Error: ${response.data.message}`);\n        }\n    }\n\n    async handleFoster() {\n        let petId = this.props.match.params.id; \n        let response = await api.pet.foster(petId);\n        if (response.data.status == \"success\") {\n            alert(`CONGRATS! ${this.state.pet.name} has been fostered!`);\n            window.location.reload();\n        } else {\n            alert(`Error occurred: ${response.data.message}`);\n        }\n    }\n\n    async handleSave() {\n        let petId = this.props.match.params.id; \n        let response = await api.pet.save(petId);\n        if (response.data.status == \"success\") {\n            alert(`${this.state.pet.name} has been added to your favorites!`);\n            window.location.reload();\n        } else {\n            alert(`Error: ${response.data.message}`);\n        }\n    }\n\n    async handleRemovedSavedPet() {\n        let petId = this.props.match.params.id; \n        let response = await api.pet.removedSavedPet(petId);\n        if (response.data.status == \"success\") {\n            alert(`${this.state.pet.name} has been removed from your favorites.`);\n            window.location.reload();\n        } else {\n            alert(`Error: ${response.data.message}`);\n        }\n    }\n\n    async handleReturn() {\n        let petId = this.props.match.params.id; \n        let response = await api.pet.return(petId);\n        if (response.data.status == \"success\") {\n            alert(`${this.state.pet.name} has been returned.`);\n            window.location.reload();\n        } else {\n            alert(`Error occurred: ${response.data.message}`);\n        }\n    }\n\n    isPetSaved() {\n        let petId = this.props.match.params.id; \n        return this.props.user.savedPets.includes(petId);\n    }\n\n    isUserOwningPet() {\n        let petId = this.props.match.params.id; \n        return this.props.user.fosteredPets.includes(petId) || this.props.user.adoptedPets.includes(petId); \n    }\n    render() {\n        return (\n            <div>\n                {this.state.pet && this.props.user &&\n                    <div>\n                        <div>\n                            <Image className=\"pet-image-heading\" src={this.state.pet.picture}></Image>\n                        </div>\n                        <div className=\"under-picture-section\">\n                            <PetDetailsText pet={this.state.pet}></PetDetailsText>\n                            <div>\n                            \n                                <div>\n                                    {this.props.user.isAdmin ? \n                                        <Link pet={this.state.pet} to={`/editPet/${this.state.pet.id}`} className=\"action-button-style edit-pet\">Edit Pet Information</Link> : <div></div>}\n                                </div>\n                                <div className=\"action-buttons-section\">\n                                    <div className=\"action-buttons\">\n                                        {this.isPetSaved() ? \n\n                                            <Button variant=\"primary\" type=\"submit\" className=\"action-button-style\" onClick={() => this.handleRemovedSavedPet()}><FontAwesomeIcon icon={faHeart}/> Unfavorite Me :(</Button>\n                                        :\n                                            <Button variant=\"primary\" type=\"submit\" className=\"action-button-style\" onClick={() => this.handleSave()}><FontAwesomeIcon icon={faHeart}/> Favorite Me!</Button>\n                                        }\n                                    {this.isUserOwningPet() ?\n                                        <div>\n                                            <Button variant=\"primary\" type=\"submit\" className=\"action-button-style\" onClick={() => this.handleReturn()}>Return Me</Button>\n                                        </div>\n                                        :\n                                        <div>\n                                            {this.state.pet.adoptionStatus.toLowerCase() === \"available\" ?  \n                                                <div>\n                                                    <Button variant=\"primary\" type=\"submit\" className=\"action-button-style\" onClick={() => this.handleFoster()}>Foster Me</Button>\n                                                    <Button variant=\"primary\" type=\"submit\" className=\"action-button-style\" onClick={() => this.handleAdopt()}>Adopt Me</Button>\n                                                </div>\n                                            : \n                                                <div className=\"label-not-available\">\n                                                    This pet is not available for adoption or fostering. \n                                                    <Link className=\"label-not-available\" to=\"/search\"> Find more pets</Link>\n                                                </div>\n                                            }\n                                        </div>\n                                    }\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default PetDetailsPage; ","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/MyPetsPage/MyPetsPage.js",["122","123"],"import React from \"react\";\nimport \"./../MyPetsPage/MyPetsPage.css\";\nimport SavedPets from \"./SavedPets/SavedPets\";\nimport OwnedPets from \"./OwnedPets/OwnedPets\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport api from \"./../../api\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ToggleButton from 'react-bootstrap/ToggleButton'\n\nclass MyPetsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ownedPets: {\n                fosteredPets: [],\n                adoptedPets: []\n            },\n            savedPets: [],\n            showSaved: true,\n            finishedLoadingInfo: false,\n            context: \"favorites\"\n        }\n    }\n\n    async componentDidMount() {\n        let userId = this.props.user.id; \n        let response = await api.user.getPets(userId);\n        this.setState({\n            ownedPets: {\n                fosteredPets: response.data.fosteredPets,\n                adoptedPets: response.data.adoptedPets\n            },\n            savedPets: response.data.savedPets,\n            finishedLoadingInfo: true\n        })\n    }\n\n    handleContextChange = (e) => {\n        let newContext = e.target.value;\n        this.setState({\n            context: newContext\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.finishedLoadingInfo && \n                    <div>\n                        <Button\n                            type=\"submit\"\n                            onClick={(e) => this.setState({context: \"favorites\"})}\n                            className={this.state.context === \"favorites\" ? \"selected-btn\" : \"unselected-buttons\"}\n                        >Favorite Pets</Button>\n                        <Button\n                            type=\"submit\"\n                            onClick={(e) => this.setState({context: \"ownedpets\"})} \n                            className={this.state.context !== \"favorites\" ? \"selected-btn\" : \"unselected-buttons\"}\n                        >Owned Pets</Button>\n                        {this.state.context === 'favorites' ? \n                            <SavedPets savedPets={this.state.savedPets} user={this.props.user}/>\n                            :\n                            <OwnedPets fosteredPets={this.state.ownedPets.fosteredPets} adoptedPets={this.state.ownedPets.adoptedPets} user={this.props.user}/>\n                        }\n                    </div>\n                }\n        </div>\n        )\n    }\n}\n\nexport default MyPetsPage; ","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/AppNavigation/AppNavigation.js",[],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/ProfileSettings/ProfileSettingsPage.js",[],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/LoggedInHome/LoggedInHome.js",["124"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./LoggedInHome.css\";\n\nclass LoggedInHome extends React.Component {\n    constructor(props) { \n        super(props);\n    }\n\n    render() {\n        return(\n            <div>\n                <h2 className=\"homepage-header\">{`Welcome to PetAdopt ${this.props.user.displayName}!`}</h2>\n                <div>              \n                    <h4 className=\"homepage-about-text\">At PetAdopt, we provide incredible homes for our furry friends,\n                        who are just looking for a loving and warm environment where\n                        they feel safe and secure.\n                    </h4>\n                    <div>\n                        <Link className=\"find-a-pet-button\" to=\"/search\">Find a Pet</Link> \n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LoggedInHome;","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/SearchPage/SearchPage.js",["125"],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/NotLoggedInHome/NotLoggedInHome.js",["126"],"import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport SignUpModal from \"./modals/SignUpModal/SignUpModal.js\";\nimport LoginModal from \"./modals/LoginModal/LoginModal.js\";\nimport { Link } from \"react-router-dom\";\nimport \"./../NotLoggedInHome/NotLoggedInHome.css\";\n\nclass NotLoggedInHome extends React.Component {\n    constructor(props) { \n        super(props);\n        this.state = { \n            showSignUpModal: false,\n            showLoginModal: false,\n        }\n    }\n\n    handleSignUpModal = () => {\n        this.setState({\n            showSignUpModal: true,\n        });\n    };\n\n    handleLoginModal = () => {\n        this.setState({\n            showLoginModal: true,\n        });\n    };\n    \n    handleCloseModals = () => {\n        this.setState({\n            showSignUpModal: false,\n            showLoginModal: false,\n        });\n    };\n\n    handleLoggedIn() {\n        this.handleCloseModals();\n        this.props.loggedIn();\n    }\n\n    handleSignedUp(newUser) {\n        this.props.signedUp(newUser); \n    }\n\n    render() {\n        return(\n            <div>\n                <h2 className=\"homepage-header\">{`Welcome to PetAdopt!`}</h2>\n                    <div>              \n                        <h4 className=\"homepage-about-text\">At PetAdopt, we provide incredible homes for our furry friends,\n                            who are just looking for a loving and warm environment where\n                            they feel safe and secure.\n                        </h4>\n                    <div className=\"homepage-buttons-section\">\n                        <Button onClick={this.handleSignUpModal}>Join Now and Adopt a Pet Today!</Button>\n                        <Button onClick={this.handleLoginModal}>Login</Button>\n                    </div>\n                </div>\n                <SignUpModal\n                    showModal={this.state.showSignUpModal}\n                    handleSignedUp={(newUser) => this.handleSignedUp(newUser)}\n                />\n                <LoginModal\n                    showModal={this.state.showLoginModal}\n                    handleLoggedIn={() => this.handleLoggedIn()}\n                />\n            </div>\n        );\n    }\n}\n\nexport default NotLoggedInHome;","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Admin/AddPetForm.js",["127","128","129"],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Admin/Dashboard/Dashboard.js",[],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Admin/EditPetForm/EditPetForm.js",["130","131","132"],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/PetDetails/PetDetailsText.js",["133"],"import React from \"react\"; \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\nimport \"./PetDetailsText.css\";\n\nclass PetDetailsText extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <div className=\"about-pet-section\">\n                <h2 className=\"pet-name-heading\">{this.props.pet.name}</h2>\n                <div className =\"pet-subsection-details\">{this.props.pet.adoptionStatus} <FontAwesomeIcon className=\"pet-card-dot\" icon={faCircle}/> {this.props.pet.type} <FontAwesomeIcon className=\"pet-card-dot\" icon={faCircle}/> {this.props.pet.breed}</div>\n                <div className=\"about-me-section\">\n                    <h2>About Me</h2>\n                    <div> \n                        <h4 className=\"about-subheadings\">Size</h4>\n                        <p className=\"about-subheadings-answers\"> I weigh {this.props.pet.weight} pounds and I am {this.props.pet.height} inches tall!</p>\n                    </div>\n                    {this.props.pet.isHypoallergenic ? \n                        <div> \n                            <h4 className=\"about-subheadings diet-rest\">Hypoallergenic: </h4>\n                            <p className=\"about-subheadings-answers diet-rest\"> Yes </p>\n                        </div>\n                        :\n                        <div> \n                            <h4 className=\"about-subheadings diet-rest\">Hypoallergenic: </h4>\n                            <p className=\"about-subheadings-answers diet-rest\"> No </p>\n                        </div>\n                    }\n                \n                    <div> \n                        <h4 className=\"about-subheadings color\">Color:</h4>\n                        <p className=\"about-subheadings-answers color\"> {this.props.pet.color}</p>\n                    </div>\n                    {this.props.pet.dietRest.length > 0 ?\n                        <div> \n                            <h4 className=\"about-subheadings diet-rest\">Dietary Restrictions: </h4>\n                            <p className=\"about-subheadings-answers diet-rest\"> {this.props.pet.dietRest}</p>\n                        </div>\n                        :\n                        <div> \n                            <h4 className=\"about-subheadings diet-rest\">Dietary Restrictions: </h4>\n                            <p className=\"about-subheadings-answers diet-rest\"> None </p>\n                        </div>\n                    }\n                </div>\n                <div className=\"meet-me-section\">\n                    <h2>Meet Me</h2>\n                    <div className=\"meet-me-section-criteria\"> \n                        <p className=\"meet-me-subheadings-answers\"> {this.props.pet.bio}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PetDetailsText;","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/NotLoggedInHome/modals/SignUpModal/SignUpModal.js",[],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Home/NotLoggedInHome/modals/LoginModal/LoginModal.js",["134"],"import React from \"react\";\nimport Modal from \"react-modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./../Modal.css\";\nimport api from \"../../../../../api\";\n\nclass LoginModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        email: '',\n        password: ''\n    }\n  }\n\n  componentDidMount() {\n    Modal.setAppElement('body'); \n  }\n\n\n  onInputChange(event, type) {\n      switch(type) {\n        case \"email\":\n          this.setState({\n            email: event.target.value\n          }\n        )\n        break;\n        case \"password\":\n          this.setState({\n              password: event.target.value\n            }\n          )\n          break;\n      }\n  }\n\n  async handleLogin(event) {\n    event.preventDefault();\n    let response = await api.authentication.login(this.state.email, this.state.password);\n    if (response.data.status === \"success\") {\n      this.props.handleLoggedIn(); \n    } else {\n      alert(\"bad credentials, try again\");\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Modal isOpen={this.props.showModal} portalClassName=\"modal\">\n          <Form>\n            <Form.Label>Sign In</Form.Label>\n            <Form.Group>\n              <Form.Control type=\"email\" \n                            placeholder=\"Enter Email\" \n                            className=\"entry-info-section\"\n                            onChange={(event) => this.onInputChange(event, \"email\")}\n                            value={this.state.email}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"password\" \n                            placeholder=\"Enter Password\" \n                            className=\"entry-info-section\"\n                            onChange={(event) => this.onInputChange(event, \"password\")}\n                            value={this.state.password}/>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" className=\"entry-button\" onClick={(event) => this.handleLogin(event)}>\n              Login\n            </Button>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default LoginModal;\n","/Users/carlymalatskey/Desktop/Code/pet-all/src/consts.js",["135"],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/Admin/Dashboard/UserCard.js",["136","137"],"import React from \"react\"; \nimport Card from \"react-bootstrap/Card\";\nimport Collapse from 'react-bootstrap/Collapse'\nimport Button from \"react-bootstrap/Button\";\nimport \"./UserCard.css\";\nimport { Link } from \"react-router-dom\";\n\nclass UserCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        }\n    }\n\n    renderPets (pets) {\n        return (\n        <div>\n            {pets.length > 0 ?\n                pets.map(pet => {\n                    return <Link to={`/petpage/${pet.id}`} className=\"pet-name\">{pet.name}</Link>\n                })\n                :\n                <div>None</div>\n            }\n        </div>)\n    }\n\n    render () {\n        return (\n            <div>\n                <Card className=\"user-card\" onClick={() => this.setState({open: !this.state.open})}> \n                        <Card.Body>\n                            <Card.Title className=\"user-name\">{this.props.user.displayName}</Card.Title>\n                            <Card.Text>\n                                {`Email: ${this.props.user.email}`}\n                            </Card.Text>  \n                    {this.state.open && \n                        <div id=\"example-collapse-text\">\n                            <div>\n                                {`Phone Number: ${this.props.user.phoneNumber}`}\n                            </div>\n                            <div>\n                                {`Adopted Pets:` }\n                                {this.renderPets(this.props.user.adoptedPets)}\n                            </div>\n                            <div>\n                                {`Fostered Pets:` }\n                                {this.renderPets(this.props.user.fosteredPets)}\n                            </div>\n                            <div>\n                                {`Saved Pets:` }\n                                {this.renderPets(this.props.user.savedPets)}\n                            </div>\n                        </div>\n                    }\n                        </Card.Body>\n                </Card>\n            </div>\n        \n        );\n    }\n}\n\n\n\nexport default UserCard; ","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/SearchPage/BasicSearch.js",["138","139"],"import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDog, faCat } from '@fortawesome/free-solid-svg-icons';\nimport \"./../SearchPage/BasicSearch.css\"\nimport consts from \"./../../consts\";\nimport api from \"./../../api\";\n\nclass BasicSearch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            typeToFind: \"\"\n        }\n    }\n\n    async handleSearch(event) {\n        event.preventDefault();\n        let results = await api.search.findAll('', this.state.typeToFind, '', '', '');\n        let pets = results.data.pets;\n        this.props.handlePetsFound(pets);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"basic-search-section\">\n                    <div>\n                        <p className=\"basic-search-title\">By Animal:</p>\n                        <Button variant=\"primary\" type=\"button\" className={this.state.typeToFind == consts.animalTypes.DOG ? \"selected-button\" : \"find-by-animal-button\"} onClick={() => this.setState({typeToFind: consts.animalTypes.DOG})}>\n                            <FontAwesomeIcon className=\"animal-icon\" icon={faDog}/>\n                            Find a dog\n                        </Button>\n                        <Button variant=\"primary\" type=\"submit\" className={this.state.typeToFind == consts.animalTypes.CAT ? \"selected-button\" : \"find-by-animal-button\"} onClick={() => this.setState({typeToFind: consts.animalTypes.CAT})}>\n                            <FontAwesomeIcon className=\"animal-icon\" icon={faCat}/>\n                            Find a cat\n                        </Button>\n                    </div>\n                </div>\n                <Button className=\"basic-search-button\" onClick={(e) => this.handleSearch(e)}>Search</Button>\n            </div>\n        )\n    }\n}\n\nexport default BasicSearch; ","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/MyPetsPage/OwnedPets/OwnedPets.js",["140"],"import React from \"react\";\nimport PetCard from \"./../../shared/PetCard\";\nimport { Link } from \"react-router-dom\";\nimport api from \"./../../../api\";\n\nclass OwnedPets extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ownedPets: [],\n            finishedLoadingInfo: false\n        }\n    }\n\n    async componentDidMount() {\n        let allPetsToFetch = [].concat(this.props.adoptedPets).concat(this.props.fosteredPets);\n        let promises = Promise.all(allPetsToFetch.map(petId => api.pet.getPetById(petId)));\n        promises.then(results => Promise.all(results.map(response => response.data.currentPet))).then(results => {\n            this.setState({\n                ownedPets: results,\n                finishedLoadingInfo: true\n        })})\n    }\n\n    render() {\n        return(\n            <div>\n                {!this.state.finishedLoadingInfo ? \n                    <div>WAIT! LOADING!</div>\n                    :\n                    <div>\n                        {this.state.ownedPets.length == 0 ?\n                            <div>\n                                <div>\n                                    <h1>No owned pets yet</h1>\n                                    <p>When you find a pet you love, own it!</p>\n                                </div>\n                                <div>\n                                    <Link className=\"find-a-pet-label\" to=\"/search\">Find a Pet</Link> \n                                </div>\n                            </div>\n                            :\n                            <div>\n                                {this.state.ownedPets.map(ownedPet => {\n                                    return <PetCard pet={ownedPet} user={this.props.user}/>\n                                })}\n                            </div>\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default OwnedPets;\n","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/SearchPage/AdvancedSearch.js",[],"/Users/carlymalatskey/Desktop/Code/pet-all/src/components/MyPetsPage/SavedPets/SavedPets.js",["141"],"import React from \"react\";\nimport PetCard from \"./../../shared/PetCard\";\nimport api from \"./../../../api\";\nimport { Link } from \"react-router-dom\";\n\nclass SavedPets extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            savedPets: [],\n            finishedLoadingInfo: false\n        }\n    }\n\n    async componentDidMount() {\n        let promises = Promise.all(this.props.savedPets.map(petId => api.pet.getPetById(petId)));\n        promises.then(results => Promise.all(results.map(response => response.data.currentPet))).then(results => {\n            this.setState({\n                savedPets: results,\n                finishedLoadingInfo: true\n        })})\n    }\n\n    render() {\n        return(\n            <div>\n                {!this.state.finishedLoadingInfo ? \n                    <div>WAIT! LOADING!</div>\n                    :\n                    <div>\n                        {this.state.savedPets.length == 0 ?\n                            <div>\n                                <div>\n                                    <h1>No favorites here yet</h1>\n                                    <p>When you find a pet you love, add it to you favorites list</p>\n                                </div>\n                                <div>\n                                    <Link className=\"find-a-pet-label\" to=\"/search\">Find a Pet</Link> \n                                </div>\n                            </div>\n                            :\n                            <div>\n                                {this.state.savedPets.map(savedPet => {\n                                    return <PetCard pet={savedPet} user={this.props.user}/>\n                                })}\n                            </div>\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default SavedPets;\n","/Users/carlymalatskey/Desktop/Code/pet-all/src/components/shared/PetCard.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"151","line":36,"column":34,"nodeType":"152","messageId":"153","endLine":36,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":47,"column":34,"nodeType":"152","messageId":"153","endLine":47,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":58,"column":34,"nodeType":"152","messageId":"153","endLine":58,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":69,"column":34,"nodeType":"152","messageId":"153","endLine":69,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":80,"column":34,"nodeType":"152","messageId":"153","endLine":80,"endColumn":36},{"ruleId":"146","severity":1,"message":"154","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":19},{"ruleId":"146","severity":1,"message":"155","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":6,"column":5,"nodeType":"158","messageId":"159","endLine":8,"endColumn":6},{"ruleId":"146","severity":1,"message":"160","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":14},{"ruleId":"146","severity":1,"message":"161","line":5,"column":10,"nodeType":"148","messageId":"149","endLine":5,"endColumn":14},{"ruleId":"162","severity":1,"message":"163","line":20,"column":15,"nodeType":"164","messageId":"153","endLine":20,"endColumn":20},{"ruleId":"165","severity":1,"message":"166","line":79,"column":13,"nodeType":"167","messageId":"153","endLine":86,"endColumn":21},{"ruleId":"150","severity":1,"message":"151","line":91,"column":60,"nodeType":"152","messageId":"153","endLine":91,"endColumn":62},{"ruleId":"168","severity":1,"message":"169","line":24,"column":9,"nodeType":"170","messageId":"171","endLine":105,"endColumn":10},{"ruleId":"150","severity":1,"message":"151","line":93,"column":62,"nodeType":"152","messageId":"153","endLine":93,"endColumn":64},{"ruleId":"172","severity":1,"message":"173","line":217,"column":17,"nodeType":"174","endLine":217,"endColumn":82},{"ruleId":"156","severity":1,"message":"157","line":7,"column":5,"nodeType":"158","messageId":"159","endLine":9,"endColumn":6},{"ruleId":"168","severity":1,"message":"169","line":23,"column":7,"nodeType":"170","messageId":"171","endLine":36,"endColumn":8},{"ruleId":"146","severity":1,"message":"175","line":1,"column":9,"nodeType":"148","messageId":"149","endLine":1,"endColumn":21},{"ruleId":"146","severity":1,"message":"176","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":16},{"ruleId":"146","severity":1,"message":"160","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":30,"column":98,"nodeType":"152","messageId":"153","endLine":30,"endColumn":100},{"ruleId":"150","severity":1,"message":"151","line":34,"column":98,"nodeType":"152","messageId":"153","endLine":34,"endColumn":100},{"ruleId":"150","severity":1,"message":"151","line":32,"column":54,"nodeType":"152","messageId":"153","endLine":32,"endColumn":56},{"ruleId":"150","severity":1,"message":"151","line":31,"column":54,"nodeType":"152","messageId":"153","endLine":31,"endColumn":56},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ButtonGroup' is defined but never used.","'ToggleButton' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Button' is defined but never used.","'Link' is defined but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","no-duplicate-case","Duplicate case label.","SwitchCase","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'faMarsDouble' is assigned a value but never used.","'Collapse' is defined but never used.","no-global-assign","no-unsafe-negation"]