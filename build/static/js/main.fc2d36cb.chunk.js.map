{"version":3,"sources":["api.js","components/PetDetails/PetDetailsText.js","components/PetDetails/PetDetailsPage.js","components/shared/PetCard.js","components/MyPetsPage/SavedPets/SavedPets.js","components/MyPetsPage/OwnedPets/OwnedPets.js","components/MyPetsPage/MyPetsPage.js","assets/Logo2.png","components/AppNavigation/AppNavigation.js","consts.js","components/ProfileSettings/ProfileSettingsPage.js","components/SearchPage/BasicSearch.js","components/SearchPage/AdvancedSearch.js","components/SearchPage/SearchPage.js","components/Home/NotLoggedInHome/modals/SignUpModal/SignUpModal.js","components/Home/NotLoggedInHome/modals/LoginModal/LoginModal.js","components/Home/NotLoggedInHome/NotLoggedInHome.js","components/Home/LoggedInHome/LoggedInHome.js","components/Admin/AddPetForm.js","components/Admin/EditPetForm/EditPetForm.js","components/Admin/Dashboard/UserCard.js","components/Admin/Dashboard/Dashboard.js","components/Home/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axiosWithOptions","axios","create","withCredentials","api","pet","getPetById","petId","get","adopt","post","foster","save","return","removedSavedPet","delete","updatePet","updatedPet","put","id","user","getPets","userId","getUserDetails","updateUser","updatedUser","search","findAll","adoptionStatus","type","height","weight","name","authentication","login","email","password","signOut","signUp","newUser","admin","addPet","newPet","getAllUsers","allUsers","PetDetailsText","props","className","this","icon","faCircle","breed","isHypoallergenic","color","dietRest","length","bio","React","Component","PetDetailsPage","state","undefined","isLoading","savedPets","match","params","setState","response","data","currentPet","status","alert","window","location","reload","message","includes","Image","src","picture","isAdmin","to","isPetSaved","Button","variant","onClick","handleRemovedSavedPet","faHeart","handleSave","toLowerCase","handleReturn","handleFoster","handleAdopt","handleUpdatedPet","PetCard","handleUnsave","a","Card","Img","Body","Title","Text","SavedPets","finishedLoadingInfo","Promise","all","map","then","results","savedPet","OwnedPets","ownedPets","allPetsToFetch","concat","adoptedPets","fosteredPets","ownedPet","MyPetsPage","handleContextChange","e","newContext","target","value","context","showSaved","AppNavigation","isSignedIn","Nav","Logo","fluid","faPaw","NavDropdown","title","faUserAlt","displayName","Item","activeClassName","constants","require","faMarsDouble","userInputTypes","EMAIL","DISPLAYNAME","PHONE_NUMBER","PASSWORD","BIO","animalTypes","DOG","CAT","adoptionStatusTypes","AVAILABLE","ADOPTED","FOSTERED","animalInputTypes","TYPE_OF_PET","BREED","NAME","ADOPTION_STATUS","HEIGHT","WEIGHT","COLOR","IS_HYPOALLERGENIC_TRUE","IS_HYPOALLERGENIC_FALSE","DIET_RESTRICTIONS","PICTURE","CHANGE_PICTURE_TRUE","CHANGE_PICTURE_FALSE","ProfileSettingsPage","event","preventDefault","handleUpdateUserProfile","useruserInputTypes","phoneNumber","password1","Form","Label","Group","Control","placeholder","onChange","onInputChange","onUpdateUserInfo","BasicSearch","typeToFind","pets","handlePetsFound","consts","faDog","faCat","OTHER","handleSearch","AdvancedSearch","handleClear","bind","isChecked","currentTarget","checked","filter","console","log","handleHeightInput","handleWeightInput","Check","label","handleAdoptionStatusInput","handleAnimalTypeInput","handleNameInput","SearchPage","isBasicChecked","isAdvancedChecked","petsFound","handleBasicCheckBox","handleAdvancedCheckBox","controlId","SignUpModal","password2","Modal","setAppElement","handleSignedUp","isOpen","showModal","portalClassName","required","handleSignUpSubmit","LoginModal","handleLoggedIn","handleLogin","NotLoggedInHome","handleSignUpModal","showSignUpModal","handleLoginModal","showLoginModal","handleCloseModals","loggedIn","signedUp","LoggedInHome","AddPetForm","handleAddPetSubmit","FormData","append","Object","keys","forEach","key","isHypoallergenicChecked","files","handleisHypoAllergenicInput","isHypoallergenicCheck","onFileChange","EditPetForm","updatedPicture","updatePicture","style","width","UserCard","open","renderPets","Dashboard","users","cookies","Cookies","HomePage","handleSignUp","error","handleSignOut","handleAddPet","exact","path","render","editPet","handleEditPet","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc2d36cb.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"\";\nconst axiosWithOptions = axios.create({\n    withCredentials: true\n})\n\nconst api = {\n    pet: {\n        getPetById: (petId) => {\n            return axiosWithOptions.get(`${baseUrl}/pet/${petId}`);\n        },\n        adopt: (petId) => {\n            return axiosWithOptions.post(`${baseUrl}/pet/${petId}/adopt`);\n        },\n        foster: (petId) => {\n            return axiosWithOptions.post(`${baseUrl}/pet/${petId}/foster`);\n        },\n        save: (petId) => {\n            return axiosWithOptions.post(`${baseUrl}/pet/${petId}/save`);\n        },\n        return: (petId) => {\n            return axiosWithOptions.post(`${baseUrl}/pet/${petId}/return`);\n        },\n        removedSavedPet: (petId) => {\n            return axiosWithOptions.delete(`${baseUrl}/pet/${petId}/save`);\n        },\n        updatePet: (updatedPet) => {\n            return axiosWithOptions.put(`${baseUrl}/pet/${updatedPet.id}`, updatedPet);\n        }\n    },\n    user: {\n        getPets: (userId) => {\n            return axiosWithOptions.get(`${baseUrl}/pet/user/${userId}`);\n        },\n        getUserDetails: (userId) => {\n            return axiosWithOptions.get(`${baseUrl}/user/${userId}`);\n        },\n        updateUser: (updatedUser) => {\n            return axiosWithOptions.put(`${baseUrl}/user/${updatedUser.id}`, updatedUser);\n        }\n    },\n    search: {\n        findAll: (adoptionStatus, type, height, weight, name) => {\n            return axiosWithOptions.get(`${baseUrl}/pet?adoptionStatus=${adoptionStatus}&type=${type}&height=${height}&weight=${weight}&name=${name}`);\n        }\n    },\n    authentication: {\n        login: (email, password) => {\n            return axiosWithOptions.post(`${baseUrl}/authentication/login`, {email, password});\n        },\n        signOut: () => {\n            return axiosWithOptions.get(`${baseUrl}/authentication/signout`);\n        },\n        signUp: (newUser) => {\n            return axiosWithOptions.post(`${baseUrl}/authentication/signup`, newUser);\n        }\n    },\n    admin: {\n        addPet: (newPet) => {\n            return axiosWithOptions.post(`${baseUrl}/pet`, newPet); \n        },\n        getAllUsers: (allUsers) => {\n            return axiosWithOptions.get(`${baseUrl}/user`, allUsers)\n        }\n    }\n};\n\nexport default api;","import React from \"react\"; \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\nimport \"./PetDetailsText.css\";\n\nclass PetDetailsText extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <div className=\"about-pet-section\">\n                <h2 className=\"pet-name-heading\">{this.props.pet.name}</h2>\n                <div className =\"pet-subsection-details\">{this.props.pet.adoptionStatus} <FontAwesomeIcon className=\"pet-card-dot\" icon={faCircle}/> {this.props.pet.type} <FontAwesomeIcon className=\"pet-card-dot\" icon={faCircle}/> {this.props.pet.breed}</div>\n                <div className=\"about-me-section\">\n                    <h2>About Me</h2>\n                    <div> \n                        <h4 className=\"about-subheadings\">Size</h4>\n                        <p className=\"about-subheadings-answers\"> I weigh {this.props.pet.weight} pounds and I am {this.props.pet.height} inches tall!</p>\n                    </div>\n                    {this.props.pet.isHypoallergenic ? \n                        <div> \n                            <h4 className=\"about-subheadings diet-rest\">Hypoallergenic: </h4>\n                            <p className=\"about-subheadings-answers diet-rest\"> Yes </p>\n                        </div>\n                        :\n                        <div> \n                            <h4 className=\"about-subheadings diet-rest\">Hypoallergenic: </h4>\n                            <p className=\"about-subheadings-answers diet-rest\"> No </p>\n                        </div>\n                    }\n                \n                    <div> \n                        <h4 className=\"about-subheadings color\">Color:</h4>\n                        <p className=\"about-subheadings-answers color\"> {this.props.pet.color}</p>\n                    </div>\n                    {this.props.pet.dietRest.length > 0 ?\n                        <div> \n                            <h4 className=\"about-subheadings diet-rest\">Dietary Restrictions: </h4>\n                            <p className=\"about-subheadings-answers diet-rest\"> {this.props.pet.dietRest}</p>\n                        </div>\n                        :\n                        <div> \n                            <h4 className=\"about-subheadings diet-rest\">Dietary Restrictions: </h4>\n                            <p className=\"about-subheadings-answers diet-rest\"> None </p>\n                        </div>\n                    }\n                </div>\n                <div className=\"meet-me-section\">\n                    <h2>Meet Me</h2>\n                    <div className=\"meet-me-section-criteria\"> \n                        <p className=\"meet-me-subheadings-answers\"> {this.props.pet.bio}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PetDetailsText;","import React from \"react\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./PetDetailsPage.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircle, faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from \"react-router-dom\";\nimport api from \"./../../api\";\nimport { alignPropType } from \"react-bootstrap/esm/DropdownMenu\";\nimport PetDetailsText from \"./PetDetailsText.js\";\n\nclass PetDetailsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pet: undefined,\n            isLoading: false,\n            savedPets: []\n        }\n    }\n\n    async componentDidMount() {\n        let petId = this.props.match.params.id;\n        this.setState({\n            isLoading: !this.state.isLoading,\n        });\n        let response = await api.pet.getPetById(petId);\n        this.setState({\n            pet: response.data.currentPet,\n            isLoading: !this.state.isLoading\n        })\n    }\n\n    async handleAdopt() {\n        let petId = this.props.match.params.id;\n        let response = await api.pet.adopt(petId);\n        if (response.data.status == \"success\") {\n            alert(`CONGRATS! ${this.state.pet.name} has been adopted!`);\n            window.location.reload();\n        } else {\n            alert(`Error: ${response.data.message}`);\n        }\n    }\n\n    async handleFoster() {\n        let petId = this.props.match.params.id; \n        let response = await api.pet.foster(petId);\n        if (response.data.status == \"success\") {\n            alert(`CONGRATS! ${this.state.pet.name} has been fostered!`);\n            window.location.reload();\n        } else {\n            alert(`Error occurred: ${response.data.message}`);\n        }\n    }\n\n    async handleSave() {\n        let petId = this.props.match.params.id; \n        let response = await api.pet.save(petId);\n        if (response.data.status == \"success\") {\n            alert(`${this.state.pet.name} has been added to your favorites!`);\n            window.location.reload();\n        } else {\n            alert(`Error: ${response.data.message}`);\n        }\n    }\n\n    async handleRemovedSavedPet() {\n        let petId = this.props.match.params.id; \n        let response = await api.pet.removedSavedPet(petId);\n        if (response.data.status == \"success\") {\n            alert(`${this.state.pet.name} has been removed from your favorites.`);\n            window.location.reload();\n        } else {\n            alert(`Error: ${response.data.message}`);\n        }\n    }\n\n    async handleReturn() {\n        let petId = this.props.match.params.id; \n        let response = await api.pet.return(petId);\n        if (response.data.status == \"success\") {\n            alert(`${this.state.pet.name} has been returned.`);\n            window.location.reload();\n        } else {\n            alert(`Error occurred: ${response.data.message}`);\n        }\n    }\n\n    isPetSaved() {\n        let petId = this.props.match.params.id; \n        return this.props.user.savedPets.includes(petId);\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.pet && this.props.user &&\n                    <div>\n                        <div>\n                            <Image className=\"pet-image-heading\" src={this.state.pet.picture}></Image>\n                        </div>\n                        <div className=\"under-picture-section\">\n                            <PetDetailsText pet={this.state.pet}></PetDetailsText>\n                            <div>\n                            \n                                <div>\n                                    {this.props.user.isAdmin ? \n                                        <Link pet={this.state.pet} to={`/editPet/${this.state.pet.id}`} className=\"action-button-style edit-pet\">Edit Pet Information</Link> : <div></div>}\n                                </div>\n                                <div className=\"action-buttons-section\">\n                                    <div className=\"action-buttons\">\n                                        {this.isPetSaved() ? \n\n                                            <Button variant=\"primary\" type=\"submit\" className=\"action-button-style\" onClick={() => this.handleRemovedSavedPet()}><FontAwesomeIcon className=\"heart-icon\" icon={faHeart}/> Unfavorite Me :(</Button>\n                                        :\n                                            <Button variant=\"primary\" type=\"submit\" className=\"action-button-style\" onClick={() => this.handleSave()}><FontAwesomeIcon className=\"heart-icon\" icon={faHeart}/> Favorite Me!</Button>\n                                        }\n                                    {this.state.pet.adoptionStatus.toLowerCase() === \"adopted\" || this.state.pet.adoptionStatus.toLowerCase() === \"fostered\" ?\n                                        <div>\n                                            <Button variant=\"primary\" type=\"submit\" className=\"action-button-style\" onClick={() => this.handleReturn()}>Return Me</Button>\n                                        </div>\n                                        :\n                                        <div>\n                                            {this.state.pet.adoptionStatus.toLowerCase() === \"available\" ?  \n                                                <div>\n                                                    <Button variant=\"primary\" type=\"submit\" className=\"action-button-style\" onClick={() => this.handleFoster()}>Foster Me</Button>\n                                                    <Button variant=\"primary\" type=\"submit\" className=\"action-button-style\" onClick={() => this.handleAdopt()}>Adopt Me</Button>\n                                                </div>\n                                            : \n                                                <div>\n                                                    This pet is not available for adoption or fostering. Either: \n                                                    <Link to=\"/search\" onClick={() => this.handleUpdatedPet()}> Find more pets</Link>\n                                                </div>\n                                            }\n                                        </div>\n                                    }\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default PetDetailsPage; ","import React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport \"./PetCard.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircle, faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from \"react-router-dom\";\nimport api from \"./../../api\";\n\nclass PetCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    handleUnsave = async () => {\n        let petId = this.props.pet.id;\n        let response = await api.pet.removedSavedPet(petId);\n        if (response.data.status === \"success\") {\n            alert(\"Successfully removed saved pet\");\n        } else {\n            alert(\"An error occurred in removing saved pet\");\n        }\n        window.location.reload(false);\n    }\n\n    handleSave = async () => {\n        let petId = this.props.pet.id;\n        let response = await api.pet.save(petId);\n        if (response.data.status === \"success\") {\n            alert(\"Successfully saved pet\");\n        } else {\n            alert(\"An error occurred in saving pet\");\n        }\n        window.location.reload(false);\n    }\n\n    render() {\n        let isPetSaved = this.props.user.savedPets.includes(this.props.pet.id);\n        return (\n            <div>\n                <Card className=\"pet-card\">\n                    <Card.Img variant=\"top\" className=\"pet-image\" src={''}/>\n                    {isPetSaved ? \n                        <FontAwesomeIcon className=\"hover-button saved-heart-icon general-icon\" icon={faHeart} onClick={() => this.handleUnsave()}/>\n                        :\n                        <FontAwesomeIcon className=\"hover-button unsaved-heart-icon general-icon\" icon={faHeart} onClick={() => this.handleSave()}/>\n                    }                    <Card.Body>\n                        <Card.Img className=\"pet-image\" src={this.props.pet.picture}></Card.Img>\n                        <Card.Title className=\"pet-name\">{this.props.pet.name}</Card.Title>\n                        <Card.Text className=\"pet-details\">\n                            {this.props.pet.adoptionStatus} <FontAwesomeIcon className=\"pet-card-dot\" icon={faCircle}/> {this.props.pet.breed}\n                        </Card.Text>\n                        <Link className=\"pet-card-button\" to={`/petpage/${this.props.pet.id}`}>Learn More About Me!</Link> \n                    </Card.Body>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default PetCard; ","import React from \"react\";\nimport PetCard from \"./../../shared/PetCard\";\nimport api from \"./../../../api\";\nimport { Link } from \"react-router-dom\";\n\nclass SavedPets extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            savedPets: [],\n            finishedLoadingInfo: false\n        }\n    }\n\n    async componentDidMount() {\n        let promises = Promise.all(this.props.savedPets.map(petId => api.pet.getPetById(petId)));\n        promises.then(results => Promise.all(results.map(response => response.data.currentPet))).then(results => {\n            this.setState({\n                savedPets: results,\n                finishedLoadingInfo: true\n        })})\n    }\n\n    render() {\n        return(\n            <div>\n                {!this.state.finishedLoadingInfo ? \n                    <div>WAIT! LOADING!</div>\n                    :\n                    <div>\n                        {this.state.savedPets.length == 0 ?\n                            <div>\n                                <div>\n                                    <h1>No favorites here yet</h1>\n                                    <p>When you find a pet you love, add it to you favorites list</p>\n                                </div>\n                                <div>\n                                    <Link className=\"find-a-pet-label\" to=\"/search\">Find a Pet</Link> \n                                </div>\n                            </div>\n                            :\n                            <div>\n                                {this.state.savedPets.map(savedPet => {\n                                    return <PetCard pet={savedPet} user={this.props.user}/>\n                                })}\n                            </div>\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default SavedPets;\n","import React from \"react\";\nimport PetCard from \"./../../shared/PetCard\";\nimport { Link } from \"react-router-dom\";\nimport api from \"./../../../api\";\n\nclass OwnedPets extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ownedPets: [],\n            finishedLoadingInfo: false\n        }\n    }\n\n    async componentDidMount() {\n        let allPetsToFetch = [].concat(this.props.adoptedPets).concat(this.props.fosteredPets);\n        let promises = Promise.all(allPetsToFetch.map(petId => api.pet.getPetById(petId)));\n        promises.then(results => Promise.all(results.map(response => response.data.currentPet))).then(results => {\n            this.setState({\n                ownedPets: results,\n                finishedLoadingInfo: true\n        })})\n    }\n\n    render() {\n        return(\n            <div>\n                {!this.state.finishedLoadingInfo ? \n                    <div>WAIT! LOADING!</div>\n                    :\n                    <div>\n                        {this.state.ownedPets.length == 0 ?\n                            <div>\n                                <div>\n                                    <h1>No owned pets yet</h1>\n                                    <p>When you find a pet you love, own it!</p>\n                                </div>\n                                <div>\n                                    <Link className=\"find-a-pet-label\" to=\"/search\">Find a Pet</Link> \n                                </div>\n                            </div>\n                            :\n                            <div>\n                                {this.state.ownedPets.map(ownedPet => {\n                                    return <PetCard pet={ownedPet} user={this.props.user}/>\n                                })}\n                            </div>\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default OwnedPets;\n","import React from \"react\";\nimport \"./../MyPetsPage/MyPetsPage.css\";\nimport SavedPets from \"./SavedPets/SavedPets\";\nimport OwnedPets from \"./OwnedPets/OwnedPets\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport api from \"./../../api\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ToggleButton from 'react-bootstrap/ToggleButton'\n\nclass MyPetsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ownedPets: {\n                fosteredPets: [],\n                adoptedPets: []\n            },\n            savedPets: [],\n            showSaved: true,\n            finishedLoadingInfo: false,\n            context: \"favorites\"\n        }\n    }\n\n    async componentDidMount() {\n        let userId = this.props.user.id; \n        let response = await api.user.getPets(userId);\n        this.setState({\n            ownedPets: {\n                fosteredPets: response.data.fosteredPets,\n                adoptedPets: response.data.adoptedPets\n            },\n            savedPets: response.data.savedPets,\n            finishedLoadingInfo: true\n        })\n    }\n\n    handleContextChange = (e) => {\n        let newContext = e.target.value;\n        this.setState({\n            context: newContext\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.finishedLoadingInfo && \n                    <div>\n                        <Button\n                            type=\"submit\"\n                            onClick={(e) => this.setState({context: \"favorites\"})}\n                            className={this.state.context === \"favorites\" ? \"selected-btn\" : \"unselected-buttons\"}\n                        >Favorite Pets</Button>\n                        <Button\n                            type=\"submit\"\n                            onClick={(e) => this.setState({context: \"ownedpets\"})} \n                            className={this.state.context !== \"favorites\" ? \"selected-btn\" : \"unselected-buttons\"}\n                        >Owned Pets</Button>\n                        {this.state.context === 'favorites' ? \n                            <SavedPets savedPets={this.state.savedPets} user={this.props.user}/>\n                            :\n                            <OwnedPets fosteredPets={this.state.ownedPets.fosteredPets} adoptedPets={this.state.ownedPets.adoptedPets} user={this.props.user}/>\n                        }\n                    </div>\n                }\n        </div>\n        )\n    }\n}\n\nexport default MyPetsPage; ","export default __webpack_public_path__ + \"static/media/Logo2.25b8fc93.png\";","import React from \"react\";\nimport \"./AppNavigation.css\"\nimport { Link } from \"react-router-dom\";\nimport Logo from \"./../../assets/Logo2.png\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaw, faUserAlt, faHeart } from '@fortawesome/free-solid-svg-icons';\nimport Image from \"react-bootstrap/Image\";\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport Nav from 'react-bootstrap/Nav';\nimport Button from \"react-bootstrap/Button\";\n\nclass AppNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n  \n  render() {\n    const { isSignedIn } = this.props; \n    return (\n      <Nav className=\"navbar-header-content\">\n          <div className=\"left-header-section\">\n            <Image src={Logo} className=\"logo-image\" fluid/>\n            <div className=\"left-header-labels\">\n                <Link className=\"nav-bar-labels\" to=\"/home\"><FontAwesomeIcon className=\"navbar-icons\" icon={faPaw}/>Home</Link>\n                <Link className=\"nav-bar-labels\" to=\"/search\"><FontAwesomeIcon className=\"navbar-icons\" icon={faPaw}/>Search</Link>\n            </div>\n          </div>\n          <div>\n            {/*TODO: take away this line: ???*/} \n            {isSignedIn && this.props.user.isAdmin && <div>ADMIN</div>}\n          </div>\n          {isSignedIn &&\n             <div className=\"right-side-navbar\">\n                <Link className=\"heart-label\" to=\"/mypets\"><FontAwesomeIcon className=\"heart-navbar-icon\" icon={faHeart}/></Link>\n                <NavDropdown title={<div className=\"username-label\" ><FontAwesomeIcon className=\"navbar-icons\" icon={faUserAlt}/>{this.props.user.displayName}</div>}>\n                  <div className=\"dropdown-section\">\n                      <NavDropdown.Item className=\"dropdown-labels\">\n                          <Button\n                            className=\"dropdown-labels\" \n                            activeClassName=\"selected\"\n                            onClick={this.props.signOut}\n                          > Sign Out\n                          </Button>\n                      </NavDropdown.Item>\n                      <NavDropdown.Item className=\"dropdown-labels\">\n                          <Link \n                          className=\"dropdown-labels\" \n                          activeClassName=\"selected\" \n                          to=\"/profile-settings\">\n                          Profile Settings\n                          </Link>\n                      </NavDropdown.Item>\n                      {this.props.user.isAdmin &&\n                        <div className=\"admin-labels\">\n                          <NavDropdown.Item className=\"dropdown-labels\">\n                              <Link \n                                className=\"dropdown-labels\" \n                                activeClassName=\"selected\" \n                                to=\"/add-pet\">\n                                Add a Pet\n                              </Link>\n                          </NavDropdown.Item>\n                          <NavDropdown.Item className=\"dropdown-labels\">\n                            <Link \n                              className=\"dropdown-labels\" \n                              activeClassName=\"selected\" \n                              to=\"/dashboard\">\n                              Dashboard\n                            </Link>\n                        </NavDropdown.Item>\n                      </div>\n                      }\n                  </div>\n                </NavDropdown>\n            </div>\n          }\n      </Nav>\n    );\n  }\n}\n\nexport default AppNavigation;\n","const { faMarsDouble } = require(\"@fortawesome/free-solid-svg-icons\");\n\nconst constants = {\n    userInputTypes: {\n        EMAIL: \"email\",\n        DISPLAYNAME: \"displayName\",\n        PHONE_NUMBER: \"phoneNumber\",\n        PASSWORD: \"password1\",\n        BIO: \"bio\"\n    },\n    animalTypes: {\n        DOG: \"dog\",\n        CAT: \"cat\"\n    },\n    adoptionStatusTypes: {\n        AVAILABLE: \"available\",\n        ADOPTED: \"adopted\",\n        FOSTERED: \"fostered\"\n    },\n    animalInputTypes: {\n        TYPE_OF_PET: \"type\",\n        BREED: \"breed\",\n        NAME: \"name\",\n        ADOPTION_STATUS: \"adoptionStatus\",\n        HEIGHT: \"height\",\n        WEIGHT: \"weight\",\n        COLOR: \"color\",\n        BIO: \"bio\",\n        IS_HYPOALLERGENIC_TRUE: true,\n        IS_HYPOALLERGENIC_FALSE: false,\n        DIET_RESTRICTIONS: \"dietRest\",\n        PICTURE: \"picture\",\n        CHANGE_PICTURE_TRUE: true, \n        CHANGE_PICTURE_FALSE: false\n    }\n};\n\nexport default constants;","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./ProfileSettingsPage.css\"\nimport constants from \"./../../consts\";\n\nclass ProfileSettingsPage extends React.Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            updatedUser: {}\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n          updatedUser: this.props.user\n        })\n    }\n\n    onUpdateUserInfo(event) {\n        event.preventDefault(); \n        this.props.handleUpdateUserProfile(this.state.updatedUser);\n    }\n\n    onInputChange(event, type) {\n        switch (type) {\n          case constants.userInputTypes.EMAIL:\n            this.setState({\n              updatedUser: {\n                ...this.state.updatedUser,\n                email: event.target.value\n              }\n            })\n            break;\n          case constants.userInputTypes.DISPLAYNAME:\n            this.setState({\n                updatedUser: {\n                    ...this.state.updatedUser,\n                displayName: event.target.value\n              }\n            })\n            break;\n          case constants.useruserInputTypes.PHONE_NUMBER:\n            this.setState({\n                updatedUser: {\n                    ...this.state.updatedUser,\n                phoneNumber: event.target.value\n              }\n            })\n            break;\n          case constants.userInputTypes.PASSWORD:\n            this.setState({\n                updatedUser: {\n                    ...this.state.updatedUser,\n                password1: event.target.value\n              }\n            })\n            break;\n        case constants.userInputTypes.BIO:\n            this.setState({\n                updatedUser: {\n                    ...this.state.updatedUser,\n                bio: event.target.value\n                }\n            })\n            break;\n          default:\n            break;\n        }\n      }\n\n\n    render() {\n        return (\n            <Form className=\"form-section\">            \n            <Form.Label>Update My Account!</Form.Label>\n            <Form.Group>\n              <Form.Control type=\"email\" \n                            placeholder=\"Enter Email\" \n                            className=\"entry-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.userInputTypes.EMAIL)}\n                            value={this.state.updatedUser.email}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"text\" \n                            placeholder=\"Full Name\" \n                            className=\"entry-info-section\"\n                            onChange={(event) => this.onInputChange(event, constants.userInputTypes.DISPLAYNAME)}\n                            value={this.state.updatedUser.displayName}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"number\" \n                            placeholder=\"Phone Number\" \n                            className=\"entry-info-section\"\n                            onChange={(event) => this.onInputChange(event, constants.userInputTypes.PHONE_NUMBER)}\n                            value={this.state.updatedUser.phoneNumber}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"password\" \n                            placeholder=\"Enter Password\" \n                            className=\"entry-info-section\"\n                            onChange={(event) => this.onInputChange(event, constants.userInputTypes.PASSWORD)}\n                            value={this.state.updatedUser.password1}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"text\" \n                            id=\"short-bio\" \n                            placeholder=\"Short Bio...\" \n                            className=\"entry-info-section\"\n                            onChange={(event) => this.onInputChange(event, constants.userInputTypes.BIO)}\n                            value={this.state.updatedUser.bio}/>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" className=\"update-profile-button\" onClick = {(event) => this.onUpdateUserInfo(event)}>\n              Update my Profile\n            </Button>\n          </Form>\n        )\n    }\n}\n\nexport default ProfileSettingsPage; ","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDog, faCat } from '@fortawesome/free-solid-svg-icons';\nimport \"./../SearchPage/BasicSearch.css\"\nimport consts from \"./../../consts\";\nimport api from \"./../../api\";\n\nclass BasicSearch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            typeToFind: \"\"\n        }\n    }\n\n    async handleSearch(event) {\n        event.preventDefault();\n        let results = await api.search.findAll('', this.state.typeToFind, '', '', '');\n        let pets = results.data.pets;\n        this.props.handlePetsFound(pets);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"basic-search-section\">\n                    <div>\n                        <p className=\"basic-search-title\">By Animal:</p>\n                        <Button variant=\"primary\" type=\"button\" className={this.state.typeToFind == consts.animalTypes.DOG ? \"selected-button\" : \"find-by-animal-button\"} onClick={() => this.setState({typeToFind: consts.animalTypes.DOG})}>\n                            <FontAwesomeIcon className=\"animal-icon\" icon={faDog}/>\n                            Find a dog\n                        </Button>\n                        <Button variant=\"primary\" type=\"submit\" className={this.state.typeToFind == consts.animalTypes.CAT ? \"selected-button\" : \"find-by-animal-button\"} onClick={() => this.setState({typeToFind: consts.animalTypes.CAT})}>\n                            <FontAwesomeIcon className=\"animal-icon\" icon={faCat}/>\n                            Find a cat\n                        </Button>   \n                        <Button variant=\"primary\" type=\"submit\" className={this.state.typeToFind == consts.animalTypes.OTHER ? \"selected-button\" : \"other-pets-button\"} onClick={() => this.setState({typeToFind: consts.animalTypes.OTHER})}>\n                            Find Other Pets\n                        </Button>\n                    </div>\n                </div>\n                <Button className=\"basic-search-button\" onClick={(e) => this.handleSearch(e)}>Search</Button>\n            </div>\n        )\n    }\n}\n\nexport default BasicSearch; ","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./../SearchPage/AdvancedSearch.css\";\nimport api from \"./../../api\";\nimport consts from \"./../../consts\";\n\nclass AdvancedSearch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            height: '',\n            adoptionStatus: [],\n            weight: '',\n            type: ''\n        }\n        this.handleClear = this.handleClear.bind(this);\n    }\n\n    handleClear(event) {\n        event.preventDefault(); \n        this.setState({\n            isChecked: false,\n            name: ''\n        });\n    }\n\n    handleNameInput(event) {\n        event.preventDefault(); \n        this.setState({\n            name: event.target.value\n        })\n    }\n\n    handleHeightInput(event) {\n        event.preventDefault(); \n        this.setState({\n            height: event.target.value\n        })\n    }\n\n    handleWeightInput(event) {\n        event.preventDefault(); \n        this.setState({\n            weight: event.target.value\n        })\n    }\n\n    async handleSearch(event) {\n        event.preventDefault();\n        let { adoptionStatus, type, height, weight, name } = this.state;\n        let results = await api.search.findAll(adoptionStatus, type, height, weight, name);\n        let pets = results.data.pets;\n        this.props.handlePetsFound(pets);\n    }\n\n    handleAdoptionStatusInput(event, type) {\n        if (event.currentTarget.checked) {\n            this.setState({\n                adoptionStatus: this.state.adoptionStatus.concat(type)\n            });\n        } else {\n            this.setState({\n                adoptionStatus: this.state.adoptionStatus.filter(status => status !== type)\n            })\n        }\n    }\n\n    handleAnimalTypeInput(event, type) {\n        // TODO: handle single select in UI\n        if (event.currentTarget.checked) {\n            this.setState({\n                type: type\n            });\n        } else {\n            this.setState({\n                type: ''\n            })\n        }\n    }\n    \n    render() {\n        console.log(this.state.type);\n        return (\n            <div className=\"adv-search-section-with-button\">\n                <div className=\"advanced-search-section\">\n                    <Form className=\"individual-adv-search-sections\">            \n                        <Form.Label className=\"advanced-search-titles\">Height</Form.Label>\n                        <Form.Group>\n                            <Form.Control \n                                type=\"text\" \n                                className=\"adv-search-name-input\"\n                                value ={this.state.height}\n                                onChange={(event) => this.handleHeightInput(event)}/>\n                        </Form.Group>         \n                        <Form.Label className=\"advanced-search-titles\">Weight</Form.Label>\n                        <Form.Group>\n                            <Form.Control \n                                type=\"text\" \n                                className=\"adv-search-name-input\"\n                                value ={this.state.weight}\n                                onChange={(event) => this.handleWeightInput(event)}/>\n                        </Form.Group>\n                    </Form>\n                    <Form className=\"individual-adv-search-sections\">            \n                        <Form.Label className=\"advanced-search-titles\">Status</Form.Label>\n                        <Form.Group className=\"advanced-search-page-checkboxes\">\n                            <Form.Check type=\"checkbox\" className=\"advanced-search-options\" label=\"Available\" onChange={(e) => this.handleAdoptionStatusInput(e, consts.adoptionStatusTypes.AVAILABLE)}/>\n                            <Form.Check type=\"checkbox\" className=\"advanced-search-options\" label=\"Adopted\" onChange={(e) => this.handleAdoptionStatusInput(e, consts.adoptionStatusTypes.ADOPTED)}/>\n                            <Form.Check type=\"checkbox\" className=\"advanced-search-options\" label=\"Fostered\" onChange={(e) => this.handleAdoptionStatusInput(e, consts.adoptionStatusTypes.FOSTERED)}/>\n                        </Form.Group>\n                    </Form>\n                    <Form className=\"individual-adv-search-sections\">             \n                        <Form.Label className=\"advanced-search-titles\">Type</Form.Label>\n                        <Form.Group className=\"advanced-search-page-checkboxes\">\n                            <Form.Check type=\"checkbox\" className=\"advanced-search-options\" label=\"Dog\" onChange={(e) => this.handleAnimalTypeInput(e, consts.animalTypes.DOG)}/>\n                            <Form.Check type=\"checkbox\" className=\"advanced-search-options\" label=\"Cat\" onChange={(e) => this.handleAnimalTypeInput(e, consts.animalTypes.CAT)}/>\n                        </Form.Group>\n                    </Form>\n                    <Form className=\"individual-adv-search-sections\">             \n                        <Form.Label className=\"advanced-search-titles\">Name</Form.Label>\n                        <Form.Group>\n                            <Form.Control \n                                type=\"text\" \n                                className=\"adv-search-name-input\"\n                                value ={this.state.name}\n                                onChange={(event) => this.handleNameInput(event)}/>\n                        </Form.Group>\n                        <Button className=\"search-button\" onClick={(e) => this.handleSearch(e)}>SEARCH</Button>\n                    </Form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AdvancedSearch; ","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./SearchPage.css\"\nimport BasicSearch from \"./BasicSearch\"\nimport AdvancedSearch from \"./AdvancedSearch\";\nimport PetCard from \"../shared/PetCard\";\n\nclass SearchPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '', // TODO: rename to searchInput\n      isBasicChecked: false,\n      isAdvancedChecked: false,\n      petsFound: []\n    }\n    this.handleBasicCheckBox = this.handleBasicCheckBox.bind(this);\n    this.handleAdvancedCheckBox = this.handleAdvancedCheckBox.bind(this);\n  }\n\n  handleBasicCheckBox() {\n    this.setState({\n      isBasicChecked: !this.state.isBasicChecked,\n      isAdvancedChecked: this.state.isBasicChecked ? this.state.isAdvancedChecked : false\n    });\n  }\n\n  handleAdvancedCheckBox() {\n    this.setState({\n      isAdvancedChecked: !this.isAdvancedChecked,\n      isBasicChecked: this.state.isAdvancedChecked ? this.state.isBasicChecked : false\n    });\n  }\n  \n  handlePetsFound(petsFound) {\n    this.setState({\n      petsFound\n    })\n  }\n\n  render() {\n    return (\n      <div>\n          <div className=\"search-overall-section\">\n          <p>Find your Furry Friend</p>\n          <Form className=\"search-input-section\">            \n              <Form.Group controlId=\"formBasicCheckbox\" className=\"search-page-checkboxes\">\n                <Form.Check type=\"checkbox\" label=\"Basic Search\"  checked={this.state.isBasicChecked} onChange={this.handleBasicCheckBox}/>\n                <Form.Check type=\"checkbox\" label=\"Advanced Search\" checked={this.state.isAdvancedChecked} onChange={this.handleAdvancedCheckBox}/>\n              </Form.Group>\n          </Form>\n          {this.state.isBasicChecked && \n            <BasicSearch handlePetsFound={(petsFound) => this.handlePetsFound(petsFound)}/>\n          }\n          {this.state.isAdvancedChecked && \n            <AdvancedSearch handlePetsFound={(petsFound) => this.handlePetsFound(petsFound)}/>\n          }\n          Pets Found: {this.state.petsFound.length}\n        </div>\n        <div className=\"pet-cards-results-section\">\n          {this.state.petsFound.map(pet => {\n            return <PetCard pet={pet} user={this.props.user}/>\n          })}\n        </div>\n      </div>\n    );\n  }\n}\nexport default SearchPage;\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./../Modal.css\"\n\nclass SignUpModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: {\n        email: '',\n        displayName: '',\n        phoneNumber: '',\n        password1: '',\n        password2: '', \n      }\n    }\n  }\n\n  componentDidMount() {\n    Modal.setAppElement('body'); \n  }\n\n  onInputChange(event, type) {\n    switch (type) {\n      case \"email\":\n        this.setState({\n          newUser: {\n            ...this.state.newUser,\n            email: event.target.value\n          }\n        })\n        break;\n      case \"full-name-text\":\n        this.setState({\n          newUser: {\n            ...this.state.newUser,\n            displayName: event.target.value\n          }\n        })\n        break;\n      case \"number\":\n        this.setState({\n          newUser: {\n            ...this.state.newUser,\n            phoneNumber: event.target.value\n          }\n        })\n        break;\n      case \"passwordOne\":\n        this.setState({\n          newUser: {\n            ...this.state.newUser,\n            password1: event.target.value\n          }\n        })\n        break;\n      case \"passwordTwo\":\n        this.setState({\n          newUser: {\n            ...this.state.newUser,\n            password2: event.target.value\n          }\n        })\n        break;\n      default:\n        break;\n    }\n  }\n\n  async handleSignUpSubmit(event) {\n    event.preventDefault();\n    if (this.state.newUser.password1 === this.state.newUser.password2) {\n      this.props.handleSignedUp(this.state.newUser);\n    } else {\n      alert(\"Passwords don't match!\");\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Modal isOpen={this.props.showModal} portalClassName=\"modal\">\n          <Form className=\"form-section\">            \n            <Form.Label>Create An Account!</Form.Label>\n            <Form.Group>\n              <Form.Control type=\"email\" \n                            placeholder=\"Enter Email\" \n                            className=\"entry-info-section\" \n                            onChange={(event) => this.onInputChange(event, \"email\")}\n                            value={this.state.newUser.email}\n                            required/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"text\" \n                            placeholder=\"Full Name\" \n                            className=\"entry-info-section\"\n                            onChange={(event) => this.onInputChange(event, \"full-name-text\")}\n                            value={this.state.newUser.displayName}\n                            required/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"number\" \n                            placeholder=\"Phone Number\" \n                            className=\"entry-info-section\"\n                            onChange={(event) => this.onInputChange(event, \"number\")}\n                            value={this.state.newUser.phoneNumber}\n                            required/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"password\" \n                            placeholder=\"Enter Password\" \n                            className=\"entry-info-section\"\n                            onChange={(event) => this.onInputChange(event, \"passwordOne\")}\n                            value={this.state.newUser.password1}\n                            required/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"password\" \n                            id=\"confirm-password\" \n                            placeholder=\"Confirm Password\" \n                            className=\"entry-info-section\"\n                            onChange={(event) => this.onInputChange(event, \"passwordTwo\")}\n                            value={this.state.newUser.password2}\n                            required/>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" className=\"entry-button\" onClick = {(event) => this.handleSignUpSubmit(event)}>\n              Join Today\n            </Button>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default SignUpModal;\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./../Modal.css\";\nimport api from \"../../../../../api\";\n\nclass LoginModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        email: '',\n        password: ''\n    }\n  }\n\n  componentDidMount() {\n    Modal.setAppElement('body'); \n  }\n\n\n  onInputChange(event, type) {\n      switch(type) {\n        case \"email\":\n          this.setState({\n            email: event.target.value\n          }\n        )\n        break;\n        case \"password\":\n          this.setState({\n              password: event.target.value\n            }\n          )\n          break;\n      }\n  }\n\n  async handleLogin(event) {\n    event.preventDefault();\n    let response = await api.authentication.login(this.state.email, this.state.password);\n    if (response.data.status === \"success\") {\n      this.props.handleLoggedIn(); \n    } else {\n      alert(\"bad credentials, try again\");\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Modal isOpen={this.props.showModal} portalClassName=\"modal\">\n          <Form>\n            <Form.Label>Sign In</Form.Label>\n            <Form.Group>\n              <Form.Control type=\"email\" \n                            placeholder=\"Enter Email\" \n                            className=\"entry-info-section\"\n                            onChange={(event) => this.onInputChange(event, \"email\")}\n                            value={this.state.email}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"password\" \n                            placeholder=\"Enter Password\" \n                            className=\"entry-info-section\"\n                            onChange={(event) => this.onInputChange(event, \"password\")}\n                            value={this.state.password}/>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" className=\"entry-button\" onClick={(event) => this.handleLogin(event)}>\n              Login\n            </Button>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default LoginModal;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport SignUpModal from \"./modals/SignUpModal/SignUpModal.js\";\nimport LoginModal from \"./modals/LoginModal/LoginModal.js\";\nimport { Link } from \"react-router-dom\";\nimport \"./../NotLoggedInHome/NotLoggedInHome.css\";\n\nclass NotLoggedInHome extends React.Component {\n    constructor(props) { \n        super(props);\n        this.state = { \n            showSignUpModal: false,\n            showLoginModal: false,\n        }\n    }\n\n    handleSignUpModal = () => {\n        this.setState({\n            showSignUpModal: true,\n        });\n    };\n\n    handleLoginModal = () => {\n        this.setState({\n            showLoginModal: true,\n        });\n    };\n    \n    handleCloseModals = () => {\n        this.setState({\n            showSignUpModal: false,\n            showLoginModal: false,\n        });\n    };\n\n    handleLoggedIn() {\n        this.handleCloseModals();\n        this.props.loggedIn();\n    }\n\n    handleSignedUp(newUser) {\n        //TODO: notify the parent\n        this.props.signedUp(newUser); \n    }\n\n    render() {\n        return(\n            <div>\n                <h2 className=\"homepage-header\">{`Welcome to PetAdopt!`}</h2>\n                    <div>              \n                        <h4 className=\"homepage-about-text\">At PetAdopt, we provide incredible homes for our furry friends,\n                            who are just looking for a loving and warm environment where\n                            they feel safe and secure.\n                        </h4>\n                    <div className=\"homepage-buttons-section\">\n                        <Button onClick={this.handleSignUpModal}>Join Now and Adopt a Pet Today!</Button>\n                        <Button onClick={this.handleLoginModal}>Login</Button>\n                    </div>\n                </div>\n                <SignUpModal\n                    showModal={this.state.showSignUpModal}\n                    handleSignedUp={(newUser) => this.handleSignedUp(newUser)}\n                />\n                <LoginModal\n                    showModal={this.state.showLoginModal}\n                    handleLoggedIn={() => this.handleLoggedIn()}\n                />\n            </div>\n        );\n    }\n}\n\nexport default NotLoggedInHome;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass LoggedInHome extends React.Component {\n    constructor(props) { \n        super(props);\n    }\n\n    render() {\n        return(\n            <div>\n                <h2 className=\"homepage-header\">{`Welcome to PetAdopt ${this.props.user.displayName}!`}</h2>\n                <div>              \n                    <h4 className=\"homepage-about-text\">At PetAdopt, we provide incredible homes for our furry friends,\n                        who are just looking for a loving and warm environment where\n                        they feel safe and secure.\n                    </h4>\n                </div>\n                <Link to=\"/mypets\"> View My Pets</Link>\n            </div>\n        );\n    }\n}\n\nexport default LoggedInHome;","import React from \"react\"; \nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./AddPetForm.css\"\nimport constants from \"./../../consts\";\nimport api from \"./../../api\";\n\nclass AddPetForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newPet: {\n            },\n            picture: undefined,\n            isHypoallergenicChecked: true\n        }\n    }\n\n    onInputChange(event, type) {\n        switch(type) {\n            case constants.animalInputTypes.TYPE_OF_PET: \n              this.setState({\n                  newPet: {\n                    ...this.state.newPet,\n                    type: event.target.value\n                  }\n                })\n                break;\n            case constants.animalInputTypes.NAME: \n              this.setState({\n                  newPet: {\n                  ...this.state.newPet,\n                  name: event.target.value\n                  }\n              })\n              break;\n            case constants.animalInputTypes.COLOR: \n              this.setState({\n                  newPet: {\n                  ...this.state.newPet,\n                  color: event.target.value\n                  }\n              })\n              break;\n            case constants.animalInputTypes.BREED:\n              this.setState({\n                newPet: {\n                  ...this.state.newPet,\n                  breed: event.target.value\n                }\n              })\n              break;\n            case constants.animalInputTypes.HEIGHT:\n              this.setState({\n                newPet: {\n                  ...this.state.newPet,\n                  height: event.target.value\n                }\n              })\n              break;\n            case constants.animalInputTypes.WEIGHT:\n              this.setState({\n                newPet: {\n                  ...this.state.newPet,\n                  weight: event.target.value\n                }\n              })\n              break;\n            case constants.animalInputTypes.ADOPTION_STATUS:\n              this.setState({\n                  newPet: {\n                    ...this.state.newPet,\n                    adoptionStatus: event.target.value\n                  }\n              })\n              break;\n            case constants.animalInputTypes.NAME:\n                this.setState({\n                    newPet: {\n                      ...this.state.newPet,\n                      color: event.target.value\n                    }\n                });\n              break;\n            case constants.animalInputTypes.BIO:\n                this.setState({\n                    newPet: {\n                    ...this.state.newPet,\n                    bio: event.target.value\n                    }\n                });\n              break;\n            case constants.animalInputTypes.DIET_RESTRICTIONS:\n                this.setState({\n                    newPet: {\n                    ...this.state.newPet,\n                    dietRest: event.target.value\n                    }\n                });\n              break;\n            default:\n              break;\n          }\n        }\n\n      handleAddPetSubmit = async (event) => {\n        event.preventDefault(); \n          try {\n            let data = new FormData()\n            data.append('file', this.state.picture);\n            Object.keys(this.state.newPet).forEach(key => {\n              data.append(key, this.state.newPet[key]);\n            })\n            let response = await api.admin.addPet(data);\n            if (response.data.status === \"success\") {\n              alert(\"Successfully added a pet\");\n              this.setState({\n                pet: response.data.pet,\n              }); \n            } else {\n              alert(\"Unable to add pet\");\n            }\n          } catch (error) {\n            alert(\"Error in adding a pet: \" + error);\n          } \n        }\n      \n       onFileChange(event) {\n        this.setState({\n            picture: event.target.files[0]\n        });\n      }\n\n      handleisHypoAllergenicInput(event, type) {\n        if(event.currentTarget.checked) {\n          this.setState({\n            newPet: {\n              ...this.state.newPet, \n              isHypoallergenic: type \n            },\n          })\n        }\n      }\n\n    render() {\n        return (\n            <Form className=\"form-section\">            \n            <Form.Label>Add a Pet</Form.Label>\n            <Form.Group>\n              <Form.Control type=\"text\" \n                            placeholder=\"Type of pet\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.TYPE_OF_PET)}\n                            value={this.state.newPet.type}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"text\" \n                            placeholder=\"Breed\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.BREED)}\n                            value={this.state.newPet.breed}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"text\" \n                            placeholder=\"Name\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.NAME)}\n                            value={this.state.newPet.name}/>\n            </Form.Group>\n            <Form.Group>\n            {/*TODO: change type to select Available/Fostered/Adopted */}\n              <Form.Control type=\"text\" \n                            placeholder=\"Adoption Status\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.ADOPTION_STATUS)}\n                            value={this.state.newPet.adoptionStatus}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"number\" \n                            placeholder=\"Height\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.HEIGHT)}\n                            value={this.state.newPet.height}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"number\" \n                            placeholder=\"Weight\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.WEIGHT)}\n                            value={this.state.newPet.weight}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"text\" \n                            placeholder=\"Color\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.COLOR)}\n                            value={this.state.newPet.color}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"text\" \n                            placeholder=\"Bio\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.BIO)}\n                            value={this.state.newPet.bio}/>\n            </Form.Group>\n            <Form.Group>\n                <Form.Label className=\"sub-heading\" >Hypoallergenic?</Form.Label>\n                <Form.Check type=\"checkbox\" \n                            className=\"checkboxes\" \n                            label=\"True\" \n                            onChange={(e) => this.handleisHypoAllergenicInput(e, constants.animalInputTypes.IS_HYPOALLERGENIC_TRUE)}\n                            onClick={this.setState({isHypoallergenicCheck: !this.state.isHypoallergenicCheck})}/>\n                <Form.Check type=\"checkbox\" \n                            className=\"checkboxes\" \n                            label=\"False\" \n                            onChange={(e) => this.handleisHypoAllergenicInput(e, constants.animalInputTypes.IS_HYPOALLERGENIC_FALSE)}\n                            onClick={this.setState({isHypoallergenicCheck: !this.state.isHypoallergenicCheck})}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"text\" \n                            placeholder=\"Diet Restrictions\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.DIET_RESTRICTIONS)}\n                            value={this.state.newPet.dietRest}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"file\" \n                            placeholder=\"Image\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onFileChange(event)}\n                            />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" className=\"add-pet-button\" onClick = {(event) => this.handleAddPetSubmit(event)}>\n              Add a pet\n            </Button>\n          </Form>\n        )\n    }\n}\n\n\nexport default AddPetForm; ","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport api from \"./../../../api\";\nimport constants from \"./../../../consts\";\nimport \"./EditPetForm.css\"\n\nclass EditPetForm extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            updatedPet: {},\n            updatePicture: undefined\n        }\n    }\n\n\n    async componentDidMount() {\n        let petId = this.props.match.params.id;\n        let response = await api.pet.getPetById(petId);\n        this.setState({\n            updatedPet: response.data.currentPet,\n        })\n    }\n\n    onInputChange(event, type) {\n        switch(type) {\n            case constants.animalInputTypes.TYPE_OF_PET: \n                this.setState({\n                    updatedPet: {\n                        ...this.state.updatedPet,\n                        type: event.target.value\n                    }\n                })\n                break;\n            case constants.animalInputTypes.BREED: \n                this.setState({\n                    updatedPet: {\n                        ...this.state.updatedPet,\n                        breed: event.target.value\n                    }\n                })\n                break;\n            case constants.animalInputTypes.NAME: \n                this.setState({\n                    updatedPet: {\n                        ...this.state.updatedPet,\n                        name: event.target.value\n                    }\n                })\n                break;\n            case constants.animalInputTypes.ADOPTION_STATUS: \n                this.setState({\n                    updatedPet: {\n                        ...this.state.updatedPet,\n                        adoptionStatus: event.target.value\n                    }\n                })\n                break;\n            case constants.animalInputTypes.COLOR: \n                this.setState({\n                    updatedPet: {\n                        ...this.state.updatedPet,\n                        color: event.target.value\n                    }\n                })\n                break;\n            case constants.animalInputTypes.HEIGHT: \n                this.setState({\n                    updatedPet: {\n                        ...this.state.updatedPet,\n                        height: event.target.value\n                    }\n                })\n                break;\n            case constants.animalInputTypes.WEIGHT: \n                this.setState({\n                    updatedPet: {\n                        ...this.state.updatedPet,\n                        weight: event.target.value\n                    }\n                })\n                break;\n            case constants.animalInputTypes.DIET_RESTRICTIONS: \n                this.setState({\n                    updatedPet: {\n                        ...this.state.updatedPet,\n                        dietRest: event.target.value\n                    }\n                })\n                break;\n            case constants.animalInputTypes.BIO: \n                this.setState({\n                    updatedPet: {\n                        ...this.state.updatedPet,\n                        bio: event.target.value\n                    }\n                })\n                break;\n        }\n    }\n\n    onFileChange(event) {\n        this.setState({\n            updatedPicture: event.target.files[0]\n        })\n    }\n\n    handleUpdatedPet = async (event) => {\n        event.preventDefault(); \n        try {\n            let data = new FormData()\n            if (this.state.updatedPicture) {\n                data.append('file', this.state.updatedPicture);\n            }\n            Object.keys(this.state.updatedPet).forEach(key => {\n                data.append(key, this.state.updatedPet[key]);\n            })\n            let response = await api.pet.updatePet(data); \n            if (response.data.status === \"success\") {\n            alert(\"Successfully updated pet profile\");\n            this.setState({\n                updatedPet: response.data.updatedPet,\n            }); \n            } else {\n            alert(\"Unable to update pet profile\");\n            }\n        } catch (error) {\n            alert(\"Error in updating profile: \" + error);\n        }\n    }\n\n    handleisHypoAllergenicInput(event, type) {\n        if(event.currentTarget.checked) {\n          this.setState({\n            updatedPet: {\n              ...this.state.updatedPet, \n              isHypoallergenic: type \n            }\n          })\n        } \n      }\n \n    render() {\n        return(\n            <Form className=\"form-section\">            \n            <Form.Label>Edit Pet</Form.Label>\n            <Form.Group>\n              <Form.Control type=\"text\" \n                            placeholder=\"Type of pet\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.TYPE_OF_PET)}\n                            value={this.state.updatedPet.type}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"text\" \n                            placeholder=\"Breed\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.BREED)}\n                            value={this.state.updatedPet.breed}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"text\" \n                            placeholder=\"Name\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.NAME)}\n                            value={this.state.updatedPet.name}/>\n            </Form.Group>\n            <Form.Group>\n            {/*TODO: change type to select Available/Fostered/Adopted */}\n              <Form.Control type=\"text\" \n                            placeholder=\"Adoption Status\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.ADOPTION_STATUS)}\n                            value={this.state.updatedPet.adoptionStatus}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"number\" \n                            placeholder=\"Height\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.HEIGHT)}\n                            value={this.state.updatedPet.height}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"number\" \n                            placeholder=\"Weight\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.WEIGHT)}\n                            value={this.state.updatedPet.weight}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"text\" \n                            placeholder=\"Color\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.COLOR)}\n                            value={this.state.updatedPet.color}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"text\" \n                            placeholder=\"Bio\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.BIO)}\n                            value={this.state.updatedPet.bio}/>\n            </Form.Group>\n            <Form.Group>\n                <Form.Label className=\"sub-heading\" >Hypoallergenic?</Form.Label>\n                <Form.Check type=\"checkbox\" className=\"checkboxes\" label=\"True\" onChange={(e) => this.handleisHypoAllergenicInput(e, constants.animalInputTypes.IS_HYPOALLERGENIC_TRUE)}/>\n                <Form.Check type=\"checkbox\" className=\"checkboxes\" label=\"False\" onChange={(e) => this.handleisHypoAllergenicInput(e, constants.animalInputTypes.IS_HYPOALLERGENIC_FALSE)}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control type=\"text\" \n                            placeholder=\"Diet Restrictions\" \n                            className=\"pet-info-section\" \n                            onChange={(event) => this.onInputChange(event, constants.animalInputTypes.DIET_RESTRICTIONS)}\n                            value={this.state.updatedPet.dietRest}/>\n            </Form.Group>\n            {/* <Form.Group>\n                <Form.Label className=\"sub-heading\" >Change Picture?</Form.Label>\n                <Form.Check type=\"checkbox\" className=\"checkboxes\" label=\"Yes\" onChange={(e) => this.handleChangePictureInput(e, constants.animalInputTypes.CHANGE_PICTURE_TRUE)}/>\n                <Form.Check type=\"checkbox\" className=\"checkboxes\" label=\"No\" onChange={(e) => this.handleChangePictureInput(e, constants.animalInputTypes.CHANGE_PICTURE_FALSE)}/>\n            </Form.Group> */}\n\n            <div>\n                <img src={this.state.updatedPet.picture} style={{width: \"50%\"}}/>\n                <Form.Group>\n                <Form.Control type=\"file\" \n                                placeholder=\"Image\" \n                                className=\"pet-info-section\" \n                                onChange={(event) => this.onFileChange(event)}/>\n                </Form.Group>\n            </div>\n\n            <Button variant=\"primary\" type=\"submit\" className=\"add-pet-button\" onClick = {(event) => this.handleUpdatedPet(event)}>\n              Save Pet\n            </Button>\n          </Form>\n        )\n    }\n}\n\nexport default EditPetForm;","import React from \"react\"; \nimport Card from \"react-bootstrap/Card\";\nimport Collapse from 'react-bootstrap/Collapse'\nimport Button from \"react-bootstrap/Button\";\nimport \"./UserCard.css\";\nimport { Link } from \"react-router-dom\";\n\nclass UserCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        }\n    }\n\n    renderPets (pets) {\n        return (\n        <div>\n            {pets.length > 0 ?\n                pets.map(pet => {\n                    return <Link to={`/petpage/${pet.id}`} className=\"pet-name\">{pet.name}</Link>\n                })\n                :\n                <div>None</div>\n            }\n        </div>)\n    }\n\n    render () {\n        return (\n            <div>\n                <Card className=\"user-card\" onClick={() => this.setState({open: !this.state.open})}> \n                        <Card.Body>\n                            <Card.Title className=\"user-name\">{this.props.user.displayName}</Card.Title>\n                            <Card.Text>\n                                {`Email: ${this.props.user.email}`}\n                                {/* TODO: indicate whether admin or user */}\n                                {/* {this.props.isAdmin ? \"Admin\" : \"User\"} */}\n                            </Card.Text>  \n                    {this.state.open && \n                        <div id=\"example-collapse-text\">\n                            <div>\n                                {`Phone Number: ${this.props.user.phoneNumber}`}\n                            </div>\n                            <div>\n                                {`Adopted Pets:` }\n                                {this.renderPets(this.props.user.adoptedPets)}\n                            </div>\n                            <div>\n                                {`Fostered Pets:` }\n                                {this.renderPets(this.props.user.fosteredPets)}\n                            </div>\n                            <div>\n                                {`Saved Pets:` }\n                                {this.renderPets(this.props.user.savedPets)}\n                            </div>\n                        </div>\n                    }\n                        </Card.Body>\n                </Card>\n            </div>\n        \n        );\n    }\n}\n\n\n\nexport default UserCard; ","import React from \"react\"; \nimport UserCard from \"./UserCard\";\nimport api from \"../../../api\";\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allUsers: undefined\n        }\n    }\n\n   async componentDidMount() {\n        let response = await api.admin.getAllUsers();\n        this.setState({ \n            allUsers: response.data.users\n        })\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                    Users\n                </div>\n                {this.state.allUsers && \n                    <div>\n                        {this.state.allUsers.map(user => {\n                            return <UserCard user={user} />\n                        })}\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Dashboard; ","import React, { Component } from \"react\";\nimport \"./HomePage.css\";\nimport PetDetailsPage from \"./../../components/PetDetails/PetDetailsPage\";\nimport MyPetsPage from \"./../MyPetsPage/MyPetsPage\";\nimport AppNavigation from \"../AppNavigation/AppNavigation\";\nimport ProfileSettingsPage from \"./../../components/ProfileSettings/ProfileSettingsPage\";\nimport SearchPage from \"./../../components/SearchPage/SearchPage\";\nimport {} from \"react-router-dom\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport NotLoggedInHome from \"./NotLoggedInHome/NotLoggedInHome\";\nimport LoggedInHome from \"./LoggedInHome/LoggedInHome\";\nimport Cookies from \"universal-cookie\";\nimport api from \"../../api\";\nimport AddPetForm from \"./../Admin/AddPetForm\";\nimport EditPetForm from \"./../Admin/EditPetForm/EditPetForm\"\nimport Dashboard from \"../Admin/Dashboard/Dashboard\";\n\nconst cookies = new Cookies();\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { //TODO: consider what to do with user\n      isSignedIn: false,\n      user: undefined\n    };\n  }\n\n  async componentDidMount() {\n    let userId = cookies.get('petAdoptionUserId');\n    let user = await api.user.getUserDetails(userId);\n    if (userId) {\n      this.setState({\n        isSignedIn: true,\n        user: user.data.user\n      })\n    }\n  }\n\n  handleUpdateUserProfile = async (updatedUser) => {\n    try {\n      let response = await api.user.updateUser(updatedUser); \n      if (response.data.status === \"success\") {\n        alert(\"Successfully updated profile\");\n        this.setState({\n          user: response.data.updatedUser,\n          isSignedIn: true\n        }); \n    } else {\n      alert(\"Unable to update profile\");\n    }\n  } catch (error) {\n    alert(\"Error in updating profile: \" + error);\n  }\n}\n\n  handleSignUp = async (newUser) => {\n    try{\n      let response = await api.authentication.signUp(newUser);\n      if (response.data.status === \"success\") {\n        alert(\"Successfully signed up\");\n        this.setState({\n          user: response.data.user,\n          isSignedIn: true\n        }); \n      } else {\n        alert(response.data.error.message);\n      }\n    } catch (error) {\n      alert(\"Error in signing up: \" + error);\n    } \n  }\n\n  handleLoggedIn = async () => {\n    let userId = cookies.get('petAdoptionUserId');\n    if (userId) {\n      let user = await api.user.getUserDetails(userId);\n      this.setState({\n        user: user.data.user,\n        isSignedIn: true\n      })\n    }\n  }\n\n  handleSignOut = async () => {\n    try {\n      let response = await api.authentication.signOut(); \n      if (response.data.status === \"success\") {\n        alert(\"Successfully signed out\");\n        this.setState({\n          user: undefined,\n          isSignedIn: false\n        });\n      } else {\n        alert(\"Unable to sign out\");\n      }\n    } catch (error) {\n      alert(\"Error in signing out: \" + error)\n    }\n  }\n\n  handleAddPet = async (newPet, picture) => {\n    try {\n      let data = new FormData()\n      data.append('file', picture);\n      Object.keys(newPet).forEach(key => {\n        data.append(key, newPet[key]);\n      })\n      let response = await api.admin.addPet(data);\n      if (response.data.status === \"success\") {\n        alert(\"Successfully added a pet\");\n        this.setState({\n          pet: response.data.pet,\n        }); \n      } else {\n        alert(\"Unable to add pet\");\n      }\n    } catch (error) {\n      alert(\"Error in adding a pet: \" + error);\n    } \n  }\n\n  handleUpdatedPet = async (updatedPet) => {\n    try {\n      let response = await api.pet.updatePet(updatedPet); \n      if (response.data.status === \"success\") {\n        alert(\"Successfully updated profile\");\n        this.setState({\n          pet: response.data.updatedPet,\n          isSignedIn: true\n        }); \n      } else {\n        alert(\"Unable to update profile\");\n      }\n    } catch (error) {\n      alert(\"Error in updating profile: \" + error);\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <AppNavigation isSignedIn={this.state.isSignedIn} user={this.state.user} signOut={() => this.handleSignOut()}/>\n        <div className=\"website-section\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/home\" />\n            </Route>\n            <Route exact path=\"/home\" render={props => this.state.isSignedIn ? <LoggedInHome {...props} user={this.state.user}/> : <NotLoggedInHome {...props} signedUp={(newUser) => this.handleSignUp(newUser)} loggedIn={() => this.handleLoggedIn()}/>}/>\n            <Route path=\"/search\">\n              <SearchPage user={this.state.user} />\n            </Route>\n            <Route path=\"/profile-settings\">\n              <ProfileSettingsPage user={this.state.user} handleUpdateUserProfile={this.handleUpdateUserProfile}></ProfileSettingsPage>\n            </Route>\n            <Route path=\"/mypets\" render={props => this.state.isSignedIn ? <MyPetsPage {...props} user={this.state.user}/> : <NotLoggedInHome {...props} signedUp={(newUser) => this.handleSignUp(newUser)} loggedIn={() => this.handleLoggedIn()}/>}/>\n            <Route path=\"/petpage/:id\" render={(props) => <PetDetailsPage {...props} user={this.state.user} editPet={() => this.handleEditPet()}/>}/>\n            <Route path=\"/add-pet\">\n              <AddPetForm user={this.state.user} handleAddPet={(newPet, picture) => this.handleAddPet(newPet, picture)}/>\n            </Route>\n            <Route path=\"/dashboard\">\n              <Dashboard user={this.state.user} />\n            </Route>\n            <Route path=\"/editPet/:id\" render={(props) => <EditPetForm {...props}/>}>\n            </Route>\n          </Switch> \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default HomePage;\n","import './App.css';\nimport React from \"react\"; \nimport HomePage from \"./components/Home/HomePage.js\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}